<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>blog.wimy.com</title>
<link>http://blog.wimy.com/</link>
<description>zelon 의 프로그래밍과 일상</description>
<language>ko</language>
<pubDate>Mon, 22 May 2017 23:49:52 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>zelon</managingEditor>
<item>
<title>미니멀리즘 책을 읽고 실행하다</title>
<link>http://blog.wimy.com/442</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;회사에서 eBook 대여를 해주기 시작하면서, 아내가 관심있어하고, 직장 동료도 관심을 가지고 실천해서, 미니멀리즘 관련 책을 3권쯤 읽어봤다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&quot;나는 단순하게 살기로 했다&quot;, &quot;버리면 버릴수록 행복해졌다&quot;, &quot;미니멀라이프 아이디어 55&quot;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;기본은 불필요한 물건을 버리기. 버리면 공간이 넓어진다. 버린 후 남겨진 물건들에 집중하게 된다. 모든 물건들은 메시지를 보낸다고 한다. &quot;날 좀 봐줘!! 날 언제쓸꺼야! 난 잊어버린거야?&quot; 이런 메시지들이 여기저기서 받게 되면, 우리는 은연 중에 스트레스를 받게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;나는 기본적으로 쇼핑을 즐기지 않고, 뭔가를 막 사모으는 사람은 아니지만, 뭔가를 정말 버리지 못하는 사람인 건 확실했다. 그런데 버리기 시작하니 기분이 좋다. 뭔가 마음의 짐을 버리는 느낌이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;책을 읽고나서, 많은 물건들을 필요한 사람에게 주고, 팔고, 버렸다. 특히 읽지도 않고 쌓아두던 많은 책들을 버렸다;; 그랬더니, 남은 책들은 열심히 읽기 시작했다. 그리고 버려두었던 블로그에도 다시 글을 쓰기 시작했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;버릴 것들을 정리하면서, 쓸 수 있는 것들을 다시 확인해보니, 넥서스7가 있었다. 이제 넥서스7을 들고다니면서 eBook을 퇴근길에 보기 시작했다. 하루에 조금이라도 더 책을 읽기 시작하니, 삶에 활력이 더해지는 느낌이다.&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-442-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/442</guid>
<comments>http://blog.wimy.com/442#entry442comment</comments>
<pubDate>Tue, 04 Apr 2017 23:23:18 +0900</pubDate>
</item>
<item>
<title>Clean Code를 읽다</title>
<link>http://blog.wimy.com/441</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:150px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile26.uf.tistory.com/image/27516F4A58E3A8562494D5&quot; filemime=&quot;image/jpeg&quot; filename=&quot;CLEAN_CODE.jpg&quot; height=&quot;197&quot; style=&quot;&quot; width=&quot;150&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;Clean Code를 읽었다. 육아에 지치고, 컴퓨터에 앉으면 코딩을 우선시하느라 당분간 책을 못 읽었었는데, 마음잡고 하루에 1챕터씩 읽어내려갔다. 하루에 1챕터라는 목표를 정하고, 애들 재우고 나와서 무조건 책을 읽고 다른 일을 시작한다고 정하니 확실히 목표를 달성할 수 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;책 내용은 코딩의 전반적인 권장 사항에 관해서이다. 결론을 요약하자면, &quot;읽기 좋게 코드를 짜라. 테스트 코드를 짜라. 시간을 들여서 코드를 재검토해라&quot;로 요약해볼 수 있겠다. 알면서도 지키지 못했던 부분들을 꼬집는 내용을 읽을 때마다 뜨끔뜨끔했다;; 그리고 어렴풋이 그러리라 생각했던 부분들을, 왜 그런지, 어떻게 해야하는지를 명확히 적어놓은 부분들이 많았다.&amp;nbsp;꼭 몸에 익히도록 해야겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1jLGEkWy5V7CCus5gWjioVJNMoAk3aBgRJHVISuA_hnE/pub&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;[구글 문서에 정리한 내용 링크]&lt;/a&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-441-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>IT</category>
<author>zelon</author>
<guid>http://blog.wimy.com/441</guid>
<comments>http://blog.wimy.com/441#entry441comment</comments>
<pubDate>Tue, 04 Apr 2017 23:07:45 +0900</pubDate>
</item>
<item>
<title>나의 프로그래밍 언어 선택 기준</title>
<link>http://blog.wimy.com/437</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;언젠가 한번 글로 정리해봐야지 하던 것을 한번 적어본다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;내가 처음 hello world를 모니터에 띄워본지 꽤 되었기 때문에, 지금은 어느 정도 쓸 수 있다고 생각하는 언어가 몇 개 있다. C++, Python, C#, Java, Go, Javascript 정도가 있다. 물론 언어마다 숙련도가 꽤 차이가 난다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;어떤 새로운 프로그램을 만들 때 어떤 기준으로 언어를 고를까를 생각해보다가, 나에게는 2가지의 기준이 있다는 생각이 들었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# Garbage Collection&lt;/p&gt;&lt;p&gt;먼저 Garbage Collection 이 있느냐 없느냐이다. 이 기준은 성능에 민감한, 특히 온라인 게임 서버 중 필드 던전(불특정 다수가 만나서 전투를 할 수 있는 공간)을 랙 없이 구현할 수 있는 언어이냐 아니냐를 판단하는 기준이 된다. 쉽게 생각해서 Garbage Collection이 동작하게 되었을 때, 전투가 벌어진다면, 버벅이게 될 것이기 때문이다. 그래서 Garbage Collection이 있는 언어는&amp;nbsp;이런 서버를 제작할 때는 배제되어야 한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서, 이런 서버를 만들 때는 C++을 쓸 수 밖에 없을 것 같다. Rust라는 언어가 최근에 나온 언어 중에는 Garbage Collection이 없다고 하는데, 아직 한번도 안 써봐서, 기회가 온다면 한번 살펴봐야 겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# 동적 타입 vs 정적 타입&lt;/p&gt;&lt;p&gt;그리고 또 하나의 기준은 동적 타입이냐, 정적 타입이냐이다. 동적 타입인 python+Javascript로 약 4천줄의 코드를 5년 정도&amp;nbsp;유지보수하면서 느낀 것은 컴파일을 하면 쉽게 잡히는 버그들을 실행시간에 만나게 된다는 것이다. 그냥 함수 이름을 하나 더 알아보기 쉽게 바꾸었는데, 혹시나 내가 검색하지 못한 곳에서 참조하고 있을까봐 전전긍긍하게 되거나, 변수 하나 삭제했는데, 테스트 못한 케이스가 있을까봐 조바심을 낸다. 혹시나 이런 경우는 유닛 테스트를 잘 짜지 못해서 그렇다고 할 수도 있지만, 글쎄, 많은 케이스들을 로직 검증을 위해서가 아닌, code coverage 테스트를 위해서 하나하나 유닛 테스트로 짜고 있는 자신을 보고 있으면, 내가 왜 이러고 있나라는 생각이 든다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서, 동적 타입의 스크립트 언어(pytho, javascript등)는 실행시켰을 때, if/for/while 등의 조건 분기가 없는 코드를 짜는 것 정도는 납득할만하다. 어차피 한번 실행시키면 대부분의 코드가 테스트되기 때문이다. 그 외에 복잡한 로직이 들어가고 depth가 깊어지는 코드라면 동적 타입의 언어는 버리자. 사실 이렇게 생각하면, python을 쓸 수 없는데, 그자리를 go언어와 C#스크립트(Visual Studio 2015 Update3이상 설치)가 이제 그 대안이 될 수 있을 것 같다. 그리고 javascript의 경우에는 typescript를 통해서 컴파일해낸 javascript를 사용하게 될 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# 나의 결론&lt;/p&gt;&lt;p&gt;python 이제&amp;nbsp;봉인하자&lt;/p&gt;&lt;p&gt;javascript는 typescript로 컴파일해내서 쓴다&lt;/p&gt;&lt;p&gt;스크립트는 가능하면 C# script, cross platform은 go언어&lt;/p&gt;&lt;p&gt;랙없어야 하는 서버는 C++. 시간나면 rust 잠깐 봐두자&lt;/p&gt;&lt;p&gt;랙이 큰 문제없는 서버는 내가&amp;nbsp;만들 일이 거의 없긴 한데, C#을 기본으로 하고, java를 보는게 어떨까 고민 중...&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-437-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>IT</category>
<author>zelon</author>
<guid>http://blog.wimy.com/437</guid>
<comments>http://blog.wimy.com/437#entry437comment</comments>
<pubDate>Wed, 28 Sep 2016 23:43:47 +0900</pubDate>
</item>
<item>
<title>[책소개] 코딩을 지탱하는 기술</title>
<link>http://blog.wimy.com/436</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-436-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/436</guid>
<comments>http://blog.wimy.com/436#entry436comment</comments>
<pubDate>Fri, 08 Jul 2016 09:53:31 +0900</pubDate>
</item>
<item>
<title>대체 누가 내 스택에 숫자 2를 적었나</title>
<link>http://blog.wimy.com/435</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;http://blogs.unity3d.com/kr/2016/04/25/debugging-memory-corruption-who-the-hell-writes-2-into-my-stack-2/&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;갑자기 스택에 이상한 값이 쓰여지는 현상을 디버깅하는 과정을 정리한 글. 과정을 따라가는 것이 흥미롭다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결론은 시스템 콜 안에서 예외가 발생해서 unwinding 되었고, 콜 안에서 사용된 스택 변수의 값이 뒤늦게 세팅되어서 발생되었다.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-435-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/435</guid>
<comments>http://blog.wimy.com/435#entry435comment</comments>
<pubDate>Wed, 18 May 2016 18:36:17 +0900</pubDate>
</item>
<item>
<title>[영화감상] 하늘에서 음식이 내린다면</title>
<link>http://blog.wimy.com/434</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;하늘에서 음식이 내린다면2가 있길래, 우와 1편이 꽤 재미있었나보다. 애들이랑 같이 봐야지하고 빌렸는데, 애들이랑 같이보면서, 정작 내가&amp;nbsp;엄청 신나게 봤다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;하늘에서 비가 아닌 음식이 내리면 어떻게 될까라는 생각에서 시작된 영화인데, 정말 재미있는 상황들이 벌어진다. 가족애, 멜로, 액션, (말도 안되는)과학, 자기 개발(?) 등 다양한 재미를 준다. 후반부를 볼 때,&amp;nbsp;애들이랑 저녁 먹으면서 봐서, 윈도우10에 DVD Player App 을 설치하면서 까지 다시 뒷장면을 제대로 봤다. 애들이 있다면 강추~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;내가 봤을 때는 포탈, 스타워즈, 모탈컴뱃, 반지의 제왕 정도의 오마주가 있었다.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-434-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>영화</category>
<category>영화감상</category>
<category>하늘에서 음식이 내린다면</category>
<author>zelon</author>
<guid>http://blog.wimy.com/434</guid>
<comments>http://blog.wimy.com/434#entry434comment</comments>
<pubDate>Sun, 08 May 2016 21:31:05 +0900</pubDate>
</item>
<item>
<title>유니티 클라우드 빌드에서 만든 app 이 유니티 로그 화면에서 멈출 때</title>
<link>http://blog.wimy.com/433</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;집에서 종종 unity 만지면서 놀다가, 유니티 클라우드 빌드를 써보기로 하고 간단히 설정해서 써봤는데,&amp;nbsp;로컬에서 빌드하면 잘 시작되는데, 유니티 클라우드 빌드에서 빌드한 apk 를 받아서 실행하면 유니티 로그 화면에서 멈추는 것이다. 이 문제로 고생하다가 해결하려고 마음 먹고 adb 로 로그를 찍어봐도 별 이상없고 해서 유니티 클라우드 빌드 웹페이지의 설정 화면을 살펴보니, 해결할 수 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;Config -&amp;gt; Show Advanced Options -&amp;gt; Edit Advanced Options 클릭 -&amp;gt; Scene List 에 본인의 Scene 파일 이름(예를 들면 Default)를 적고 Add 버튼을 누른 후 저장하자. 아마 제대로 된 경로(Assets/Default.unity)를 보여줄 것이다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;즉, 클라우드 빌드 시에 기본으로 시작할 scene 을 지정해주지 않아서 발생한 문제였다(사실 이걸 왜 굳이 설정해줘야 하는지는 의아하지만;;). 여튼&amp;nbsp;이제 다시 빌드를 후 apk 를 설치해보자. 잘 시작된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-433-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>유니티</category>
<category>유니티 클라우드 빌드</category>
<author>zelon</author>
<guid>http://blog.wimy.com/433</guid>
<comments>http://blog.wimy.com/433#entry433comment</comments>
<pubDate>Tue, 26 Apr 2016 00:30:33 +0900</pubDate>
</item>
<item>
<title>동방불패를 보다</title>
<link>http://blog.wimy.com/432</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;이제야 영화 '동방불패' 를 봤다. 1992년 작품이다. 아는 형이 '동방불패'를 외치며 뛰어다닐 때도 그러려니 하고 있었는데, 난 명작 영화를 놓친 게 너무 많다. 돌이켜보면 사실 저 시대에는 난 국민학교 6학년이었고, 그 나이가 볼 영화도 그 당시에 볼 환경도 아니었던 것 같다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;'양들의 침묵' 을 봤을 때 느꼈던, 그 이후에 나온 많은 영화들이 그 모티브를 가져와서 너무 식상해진 명작 영화를 보는 느낌이었지만, 동방불패는 지금봐도 꽤 볼만하다는 느낌이었다. 동성애와 원수와의 사랑이 적절하게 녹아있고, 오랜 만에 봐서인지 중국식 칼싸움 액션(!)이 꽤 멋있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-432-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>일반</category>
<category>동방불패</category>
<category>영화</category>
<author>zelon</author>
<guid>http://blog.wimy.com/432</guid>
<comments>http://blog.wimy.com/432#entry432comment</comments>
<pubDate>Mon, 07 Mar 2016 22:14:00 +0900</pubDate>
</item>
<item>
<title>한국에서 appengine 응답이 느린 이유는 위치 때문이다</title>
<link>http://blog.wimy.com/431</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;뭐 당연한 얘기일 수도 있는데, go언어를 appengine 으로 개발하면서 로컬에서 띄운 서버인데도 1초 정도 걸렸다. 너무 느려서 stackoverflow 에 질문했더니...&amp;nbsp;&lt;a href=&quot;http://stackoverflow.com/questions/33942583/too-slow-ttfblatency-with-go-language-in-appengine/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://stackoverflow.com/questions/33942583/too-slow-ttfblatency-with-go-language-in-appengine/&lt;/a&gt; 실서버에서는 괜찮을거라고...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;근데 나는 실서버에 올려도 느려서 혹시나 하고 developer console 에서 확인해보니 appengine 의 위치가 us-central 이다. 그래서 azure 를 통해서 가상 컴퓨터를 미국 중부에 만들어서 접속해보니 37ms 안에 응답이 시작되었다. 역시...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;appengine 을 쓸 때는 빠른 응답을 기대하고 쓰면 안되겠군.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;테스트 사이트 :&amp;nbsp;&lt;a href=&quot;http://test-try-go.appspot.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://test-try-go.appspot.com/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;소스 코드 :&amp;nbsp;&lt;a href=&quot;https://github.com/GoogleCloudPlatform/appengine-try-go&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/GoogleCloudPlatform/appengine-try-go&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-431-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>AppEngine</category>
<category>chrome dev tool</category>
<category>golang</category>
<category>Python</category>
<category>TTFB</category>
<category>Waiting</category>
<author>zelon</author>
<guid>http://blog.wimy.com/431</guid>
<comments>http://blog.wimy.com/431#entry431comment</comments>
<pubDate>Sat, 28 Nov 2015 11:53:14 +0900</pubDate>
</item>
<item>
<title>TubeEnglish 를 소개합니다</title>
<link>http://blog.wimy.com/430</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;Google Hackfair 에 내려고 만들었는데, 안타깝게도 전시회에는 못 나가게 되었음 ㅠㅜ 마무리하는 의미로 블로그에 소개글 남겨본다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;메인 주제는 YouTube 를 통한 영어 공부를 할 때 도움이 되는 웹앱이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile5.uf.tistory.com/image/2461CA4956547AA12B14DC&quot; filemime=&quot;image/jpeg&quot; filename=&quot;tube_english.png&quot; height=&quot;524&quot; style=&quot;&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;다음과 같은 기능이 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;* 구간 반복&lt;/p&gt;&lt;p&gt;* 속도 조절&lt;/p&gt;&lt;p&gt;* 5초/10초 앞으로 가기&lt;/p&gt;&lt;p&gt;* 자막 켜고 끄기&lt;/p&gt;&lt;p&gt;* 사전 연동&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;소개 동영상 주소는&amp;nbsp;&lt;a href=&quot;https://www.youtube.com/watch?v=_UVfek-zRqE&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://www.youtube.com/watch?v=_UVfek-zRqE&lt;/a&gt; 이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;홈페이지 주소는 &lt;a href=&quot;http://tube-english.appspot.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://tube-english.appspot.com/&lt;/a&gt; 이다. 여기서 검색 창에 YouTube 주소를 붙여넣고 검색하면 위의 화면처럼 로딩되면서 앞의 기능들을 사용할 수 있다. 크롬 웹브라우저에서는 &lt;a href=&quot;https://chrome.google.com/webstore/detail/bcojlbpjgjmaniipjelppbehhfhankcb/publish-accepted?hl=ko&amp;amp;utm_source=chrome-ntp-launcher&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;[플러그인]&lt;/a&gt; 을 설치하면 YouTube 에서 동영상을 보다가 원클릭에 갈 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;오픈소스이며 주소는&amp;nbsp;&lt;a href=&quot;https://github.com/zelon/youtube-english&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/zelon/youtube-english&lt;/a&gt; 이다. 개발 환경은 golang + appengine, javascript, bootstrap, chrome extension 이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;나름 열심히 준비했는데, 아이디어가 조금 부족했던 것 같다. 나름 요긴하게 쓰는 사이트가 되겠지만 말이다. 아쉽지만, 다음을 기약하며 관련 지식을 좀 더 습득했는 걸로 만족하자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;끝.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-430-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>ghackfair</category>
<category>tube-english</category>
<category>youtube</category>
<author>zelon</author>
<guid>http://blog.wimy.com/430</guid>
<comments>http://blog.wimy.com/430#entry430comment</comments>
<pubDate>Wed, 25 Nov 2015 00:24:40 +0900</pubDate>
</item>
<item>
<title>go언어 + appengine 으로 개발하면서 겪은 것들</title>
<link>http://blog.wimy.com/429</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;google hackfair 2015 를 준비하면서 겪었던 것들을 잊기 전에 정리해본다. 아쉽게도 전시회 명단에는 들지 못했지만 ㅠㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;go 로 만든다고 매우 큰 속도 향상은 없었다. 연산을 많이 하는 작업은 빨라질 거라 예상하는데, 단순한 request~response 의 경우 속도가 그렇게 빠르다는 느낌은 없다. (내가 아직 잘 몰라서겠지만)오히려 단순한 작업의 경우 1,2초의 응답 속도를 보일 때가 있다. 왜 그런지는 좀 더 파악해봐야 할듯.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;appengine 에서 datastore 를 사용할 때 로컬에서는 문제가 없었는데 실제 서버에서 &quot;&quot; 이런 오류가 날 경우가 있다. 해당 쿼리문의 조합을 지원하는 복합 인덱스가 있어야 한다는 것인데, 로컬 서버에서는 문제가 없었기 때문에 좀 난감했다. 로컬 서버를&amp;nbsp;띄울 때 'devappserver.py --require_indexes yes .' 형태로 띄우면 로컬 서버에서도 해당 문제가 재현이 된다. 원인은 index.yaml 에 복합 인덱스를 실수로 수동으로 지웠기 때문이었다. require indexes 옵션없이 로컬에서 서버를 동작시키면 index.yaml 파일을 갱신해주는데 이 파일을 수동으로 편집하고 서버에 올렸기 때문에 발생한 문제였다. 이것도 나중에 자세히 살펴봐야할듯. 여튼 중요한 건, 쿼리문에서 2개 이상의 필드를 함께 사용하면 그 필드들이 묶인 복합 인덱스가 필요하다. filter(&quot;A&quot;).order(&quot;B&quot;) 이면 A+B 의 복합 인덱스가 필요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;datastore 에서 1500자 넘는 문자열은 string 으로 저장이 안되는 것으로 나오는데, 좀 더 살펴보니 index 를 걸지 않으면 사용할 수 있다. 자동으로 index 가 걸려서 사용 못하나 싶었지만, `datastore:&quot;,noindex&quot;` 를 구조체 필드에 붙여주면 index 를 걸지 않게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일반 go 언어에서는 http.Get 으로 다른 웹페이지를 가져오지만, appengine 에서는 &quot;appengine/urlfetch&quot; 를 사용해야 한다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;index.yaml 에서 특정 디렉토리 전체를 업로드/노출시킬 수 있다. static_dir 구문을 사용하면 쉽게 가능하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-429-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>AppEngine</category>
<category>ghackfair</category>
<category>golang</category>
<category>Google</category>
<category>tube-english</category>
<author>zelon</author>
<guid>http://blog.wimy.com/429</guid>
<comments>http://blog.wimy.com/429#entry429comment</comments>
<pubDate>Tue, 24 Nov 2015 23:48:20 +0900</pubDate>
</item>
<item>
<title>어느 게임 서버 개발자의 하루</title>
<link>http://blog.wimy.com/428</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;어느날 갑자기 나는 회사에서 무엇을 하고 있는가하는 생각이 들었다. 블로그가 원래 개인의 기록을 남기는 것이기 때문이기도 하고 혹시나 게임 서버 개발자가 되고 싶어하는 사람들이 궁금해할까 싶기도 하고...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;대략 9시 전후로 자전거를 타고 출근을 한다. 집에서 나서서 회사 자리에 앉기까지 대략 20분 정도 걸리는 거리라서 부담이 없다. 오히려 버스를 타면, 걸어나오는 시간, 버스 기다리는 시간 등 때문에 더 오래 걸린다. 비오면 버스타야함.&amp;nbsp;9시 30분 기준으로 업무가 시작되며, 좀 늦게 와도 뭐라하는 사람은 없다. 다만, 업무시간 8시간은 다들 알아서 지킨다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;출근해서 자리에 앉으면, 어느 자리에서나 보이는, 매우 커다란 모니터에&amp;nbsp;주기적으로 개발 상태를 체크하는 CI(젠킨스)가 현재 어떤 문제가 발생했는지 알려준다. 문제가 발생하면 빨간 배경에 'XXX Failed, YYY Failed' 같은 화면을 보여주고, 문제가 없으면 '최신 걸그룹 뮤직 비디오' 를 보여준다. 5일 중에 2일 정도는 이런저런 문제가 있기 때문에 이런 문제를 해결한다. 보통은 단순 실수, CI 프로세스의 버그 정도이다. 물론 해결하기 골치 아픈거라서 임시 땜빵으로 넘어가는 경우도 있다. 이런 문제를 해결하는 데 대략 1시간 정도 소모되는 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;일단 급해보이는 'XXX Failed' 들을 해결하고나서 걸그룹 뮤직 비디오가 나오는 걸 잠시 잠깐 보고나서... 덤프 수집 웹페이지를 확인하고 처리한다. 그리고 팀원들의 commit log 들을 훑어보기 시작한다. 어떤 일들이 진행되고 있는지, 내가 실수한 걸 다른 팀원들이 고쳐주지는 않았는지, 다른 팀원들은 어떻게 코드를 만드는지, 나만 이상한 형태로 코드를 만들고 있지는 않은지 확인한다.&amp;nbsp;좀 관심있거나 흥미를 끄는 commit 은 파일 한줄한줄 diff 하면서 자세히 훑어본다. 궁금한게 있으면 작성자에게 의도를 물어보거나, 내가 생각한 방법은 어떤지 의견을 교환하기도 한다. 의견을 교환하면서 많이 배운다는 느낌도 받는다. 대략 30분~60분 정도의 시간이 소모된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;여기까지 오면 대략 10시나 11시쯤 된다. 12시부터 점심 시간이므로 이 때부터 점심시간 전까지는 코드를 다듬는 시간으로 한다. 지난번 구현에서 일정 부족으로 Ctrl+CV 했던 코드를 정리하거나, 특정 코드들을 모아서 클래스로 뽑아낸다. 평소에 마음에 들지 않았던 코드들을 조금씩 손보는 시간으로 활용한다. 일정과 상관없이 팀장님이 시킨 일들도 한다. 평소에 이런 일을 조금씩 계속 진행해놓아야 디버깅도 편하고, 가슴속의 답답함도 줄어들고, 숨겨진 버그들도 발견되어 수정된다. 물론 바쁜 일정이 있다면 일정을 진행한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;점심시간에는 운동하고 밥 먹거나(50%) 찜질방에서 자고 밥 먹거나(40%) 게임하고 밥 먹는다(10%)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;오후에는 일정에 따른 일들을 주로 한다. 기획팀에서 주도하는 '이런저런 기능을 추가해주세요', '이거 불편해요' 이런것들이다. 이런 일들을 하기 위해서, 생각도 하고, 코딩도 하고, 기획팀이랑 얘기도 한다. 그러다보면 팀장님이 와서 '뭐 도와줄거 없어요?' 라든지 '이거 좀 이상해요' 라면서 새로운 잡일들을 맡기고 간다... 간단한 일이면 바로 하고 아니면 할일목록에 넣어둔다. 또 계속 일정 진행...&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;CI 는 주기적으로 계속 체크를 하기 때문에, 갑자기 빨간색 화면을 보여준다. 그러면 살짝 쉴겸 CI 가 알려주는 문제를 해결한다. 이게 빨리 해결이 안되면 일정 진행을 미루고 해결하는데 시간을 들인다. 여기의 빨간색 화면은 적게는 몇십명, 많게는 백여명이 될 수 있으므로 가능하면 빨리 해결해야 한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;다시 일정을 진행하려고 했는데, 누군가와서 이 덤프 좀 확인해주세요라며 덤프 확인을 요청한다. 나한테 왔다는건 내가 일을 저질렀다는 것이다. 열심히 일을 처리한 후, 핫픽스가 필요하면 해당 브랜치에 핫픽스를 진행하고 다시 배포를 진행한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;다시 일정을 진행하려고 하는데, 이번에는 기획팀원이 와서 이런저런 것들을 물어본다. 당연히 친절히 설명해준다. 나도 잘 모르면 잘 아는 팀원에게 같이가서 설명을 듣는다. 그리고 기획팀원이 헷갈려하는 부분을 헷갈려하지 않도록 하는 방안이 나온다면 또 할일목록에 넣어둔다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;일정진행 좀 한다...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;5일 중에 하루나 이틀은 오후에&amp;nbsp;팀원들이랑 티타임을 하는 시간이 생겼다. 한번은 꼭 팀장님이 전체 팀원을 모으고, 그냥 몇몇 팀원들이 모여서 티타임을 가지기도 한다. 한창 바쁜데 무슨 티타임이냐고 할 수도 있지만, 팀원들간의 티타임은 중요하다고 생각한다. 서로 개인적인 이야기나 일에 대한 의견교환, 그리고 시덥잖은 농담따먹기도 팀웍에 도움이 된다고 생각한다. 이 팀웍이 일을 할 때 커뮤니케이션 비용을 줄여주고, 불필요한 설명이나 논쟁을 줄여준다. 그리고 사실 나에게도 잠시의 휴식도 필요하고... 어디서 논문인지 통계인지를 봤는데, 직장인이 가장 행복할 때는 상사의 인정, 월급, 승진 같은 것보다도 직장 동료와 즐겁게 대화하는 시간이라고 한다. 나는 행복해...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;잠시의 휴식 시간을 가진 후 다시 일정 진행...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;회의가 하나 잡혀있다. 대부분 1시간 정도 회의를 진행한다. 갔다오면 할일목록에 할일 추가 ㅋㅋㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;다시 일정진행...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;오후 6시 30분이 퇴근 시간이다. 이 시간이 가까워지면 보통 살짝 다른 형태로 일을 진행하게 된다. 먼저, 함부로 commit 을 만들지 않는다. commit 해서 빌드가 깨지거나 큰 문제가 발생하면 집에 못가는 거다. 그 상태로 집에 가면 무책임하다는 소리가 나올 수 밖에 없다. 물론 조금 늦게 갈 거면 상관없다. 그리고 새로운 작업을 가능하면 시작하지 않는다. 그 대신 밀린 메일을 읽거나, 다른 팀원들의 commit log 를 보기도 한다. 물론 일정이 급하면 일정을 최대한 진행한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;좀 재미있는게, 'XXX Failed' 라는 메시지를 보는 팀원들의 시각이다. 누구나 빨간 배경 화면을 보면 무언가 문제가 있다는 것을 안다. 그리고 누군가는 이 문제를 해결해야 겠다. 누군가는 이 문제를 알려야 겠다. 누군가는 신경 안 쓴다... 누군가 해결하고 있겠지... 하지만 이건 단순한 현상일 뿐이고, 실제로는 얼마큼 해결할 수 있냐에 따라서 반응하는 것 같다. 저게 뭐야 해결해볼까... 아... 어렵구나... 흰건 배경이고 까만건 글자인데... 아몰랑... 그래서 팀에 합류한지 오래되면 문제 해결을 더 잘하게 되는 경향이 있다. 그런데 이걸 잘 해결한다고 해서 프로그래밍을 잘하게 된다거나 그런건 아니다. 그냥 소모적인 시간을 좀 더 쓸 뿐...&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-428-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<author>zelon</author>
<guid>http://blog.wimy.com/428</guid>
<comments>http://blog.wimy.com/428#entry428comment</comments>
<pubDate>Thu, 03 Sep 2015 01:23:51 +0900</pubDate>
</item>
<item>
<title>코드가 망가지는 과정</title>
<link>http://blog.wimy.com/427</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;누군가 코드를 만든다. 꽤 잘 만들었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다른 누군가 그 코드에 수정사항을 가할 일이 생겼다. 원래 코드의 의도를 100% 이해하지는 못하고 만들게 된다. 당연하다. 일정이 있고, 간단해보이는 일을 하는데, 원래 전체 코드를 다 읽고 일할 수는 없다. 하지만, 특정 함수가 길어지게 되었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또다른 누군가가 새로운 기능을 추가한다. 또다시 전체 코드를 모두 이해하고 작업을 하지 않는다. 하지만 새 기능은 제대로 동작하며, 딱히 고쳐야할 이유는 없다. 기존의 코드와 모양새가 다르고, 독립적인 모듈처럼 보이기도 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또 새로운 기능이 추가되는데 앞의 기능과 비슷한 기능이다. 앞에서 누군가가 만든 클래스와 비슷한(복사~붙여넣기를 한) 클래스를 만들어서 하위 모듈로 추가한다. 여전히 잘 동작한다. 꽤 큰 기능인데, 쉽게 만들었다고 좋아한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;앞의 4명 중, 처음 2명이 퇴사를 하였다. 누구도 코드의 의도를 제대로 파악한 사람이 없다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;새로운 누군가가 정말 간단한 기능을 추가했다. 그런데 중요한 기능이 동작하지 않는다. 디버깅을 한다. 헤맨다. 함수는 엄청나게 길고, 비슷한 클래스들이 여기저기 있고, 이상하게 코드들이 일관성이 없다. 읽기가 힘들다. 이 파일 저 파일을 따라가면서 디버깅을 해야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;What the XXXX. 코드가 왜 이렇게 된거야~~~~~!!!&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-427-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<author>zelon</author>
<guid>http://blog.wimy.com/427</guid>
<comments>http://blog.wimy.com/427#entry427comment</comments>
<pubDate>Wed, 02 Sep 2015 00:21:00 +0900</pubDate>
</item>
<item>
<title>여러명이 함께 협업해서 코드를 만들 때 발생하는 일들</title>
<link>http://blog.wimy.com/426</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;내가 주석으로 남겨놓은 코드는 남들에게 '이게 왜 주석처리되어 있는가, 앞으로 쓰일 코드인가?'라는 의구심을 주게 되고, 코드를 읽는데 방해를 주게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사용하지 않게 된 변수, 함수들을 남겨놓으면 그 코드를 잘못 사용하게 될 여지가 있다. 동료가 그 함수를 잘못 사용해버릴 수도 있고,&amp;nbsp;마찬가지로 더이상 사용하지 않는 변수를 비교한다든지할 수도 있고, 코드를 읽기도 힘들어 진다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;내가 A라는 작업과 B라는 작업을 동시에 진행하고 한번에 submit 하게 되면, 나의 코드를 리뷰하는 동료들은 도대체 이 submit 은 왜 이렇게 복잡한거야라면서 리뷰를 하지 않게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;'가나다 동작 방식을 바꿈' 이라고 적어놓은 submit log 는 '가나다 동작 방식을&amp;nbsp;바꿈. 정렬을 먼저 시킨 후에 공백을 제거함' 이라고 적어놓은 submit log 보다 동료들을 고생시키게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;내가 별 의미없이 수정한 코드를 동료들이 볼 때 '왜 이렇게 했을까... 뭔가 이상한데, 분명 의도가 있을거야. 그 의도는 무엇일까...' 하게 되는 경우가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;위에서 동료들은 '6개월 후의 자기 자신' 그리고 '디버깅 중인 자기 자신' 이 포함된다는 걸 잊지말자.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-426-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<author>zelon</author>
<guid>http://blog.wimy.com/426</guid>
<comments>http://blog.wimy.com/426#entry426comment</comments>
<pubDate>Tue, 01 Sep 2015 00:21:14 +0900</pubDate>
</item>
<item>
<title>프로그래밍을 할 때 변수, 클래스의 이름을 잘 지어야한다</title>
<link>http://blog.wimy.com/425</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;오늘 팀장님께 열심히 강의들었던 내용임... 조금은 각색해서...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다들 알다시피 프로그래밍을 할 때 이름이 중요하다. 한 눈에 알아보기 쉽고, 읽기 쉽고, 의도를 파악하기 쉽다. 뭐 대충 책에서 이런 내용들이 있고, 다들 알고 있다. 하지만 우리는 비영어권이기 때문에 늘 이름짓기를 힘들어한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;오늘 한창 디버깅을 하고 있는데, 살짝 멘탈이 붕괴되는 상황에서, 다른 사람들이 마구 추가한 코드를 접했다. 사실 내가 추가한 것도 있겠지. 하지만 내 기억과는 먼 코드들이다. 왜 여기에 이런 코드들이 존재하는가. 팀장님이 이런 얘기를 해줬다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;자꾸 다른 사람들이 이 XXXManager 클래스에 이런저런 코드들을 넣는 이유는 이름이 Manager 이기 때문이다. 클래스 이름을 좀더 특화시켜서, Creator 라고 지었으면, 생성과 관련 없는 코드를 다른 사람들이 추가하지 않았을 것이고, 생성에 관련된 코드만 모여있게 될 것이다. Manager 라는 이름으로 클래스를 만들면, 누구나 아무 코드를 집어넣는다. 그리고 그렇게 뚱뚱해진 클래스는 디버깅하는 데에 계속 걸림돌이 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이름을 잘 짓자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-425-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>변수이름</category>
<category>이름</category>
<category>클래스이름</category>
<category>프로그래밍</category>
<author>zelon</author>
<guid>http://blog.wimy.com/425</guid>
<comments>http://blog.wimy.com/425#entry425comment</comments>
<pubDate>Tue, 01 Sep 2015 00:08:39 +0900</pubDate>
</item>
<item>
<title>iocp WSARecv 에서의 특이한 10014 오류</title>
<link>http://blog.wimy.com/424</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;아는 친구가 만든 프로그램에서 MFC 를 제거하고, x86에서 x64 로 전환하는 과정 중에서 생긴 버그였다.&amp;nbsp;IOCP 에서 WSARecv 를 했는데, 실패하면서 에러코드를 살펴보니 10014 오류가 났다. 한글 번역으로는 '호출에 대한 포인터 인수를 사용하려는 동안 시스템에서 잘못된 포인터 주소를 감지했습니다.' 이고, msdn 에서는 lpbuffers 인자가 잘못되었다고 하고, 이래저래 검색해보면 인자의 생명 주기라든지, 다른 인자가 잘못되었느니라고 적혀있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;결론은 winsock2.h 를 include 하기 전에 #pragma pack (1) 코드가 있었다. 제거하니 잘된다. ㅠㅜ 아마 pragma pack 에 의해서 winsock2.h 에서 정의하는 구조체가 pack 되어버렸을 것이고, 그렇게 pack 된 구조체만큼을 new 해서 인자로 넘겨주니, 함수로 넘겨진 포인터는 함수가 원하는 크기가 아니어서 생긴 오류인 듯.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;bad pointer 오류 상황에서는 pragma pack 도 연관될 수 있다는 걸 깊이 새겨야겠다. 하지만 이런 오류를 다시 만날 일은 없겠지.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-424-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<author>zelon</author>
<guid>http://blog.wimy.com/424</guid>
<comments>http://blog.wimy.com/424#entry424comment</comments>
<pubDate>Thu, 04 Jun 2015 23:21:52 +0900</pubDate>
</item>
<item>
<title>나의 백업 방법</title>
<link>http://blog.wimy.com/423</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;한 때는 외장하드에 주기적으로 백업을 했었으나 집에 불이라도 나면 다 날아간다는 생각에 클라우드로 백업을 하기로 했다.&lt;br&gt; 주기적으로 알람을 걸어놓고 때가 되면 스크립트로 ms azure 파일 서비스를 이용해서 백업을 한다. 초기 백업에는 시간이 꽤 걸리지만 두번째부터는 바뀌거나 새로운 파일만 가기 때문에 시간도 그나지 많이 걸리지도 않는다. 그리고 회사에서 msdn subscription을 지원해줘서 무려 공짜! ㅋㅋ&lt;br&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-423-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/423</guid>
<comments>http://blog.wimy.com/423#entry423comment</comments>
<pubDate>Sat, 09 May 2015 23:13:59 +0900</pubDate>
</item>
<item>
<title>레이드1 이라도 fat 는 날아간다 ㅠㅜ</title>
<link>http://blog.wimy.com/422</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;윈도우에서 제공하는 소프트웨어 레이드1 구축하고 중요한 데이터를 넣어놓았는데 파일 할당 테이블이 갑자기 RAW 로 바뀌었다. testdrive 도 써봤는데 제대로 복구가 안되어서 결국 포기.&lt;br /&gt; 원래 하드가 꽤 오래되어서 2개를 새로 사서 다시 레이드1 구성해서 쓰게로 했다. 다행히 클라우드에 백업을 두기적으로 했기에 날아간건 약 일주일 분량의 사진 20장 정도. 그래도 뭔가 궁극의 레이드! 라고 생각했었는데 생각보다 쉽게 데이터가 깨져서 좀 멘붕이다 ㅠㅜ&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp;역시 궁극은 클라우드 백업이다 -_-/&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-422-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>IT</category>
<author>zelon</author>
<guid>http://blog.wimy.com/422</guid>
<comments>http://blog.wimy.com/422#entry422comment</comments>
<pubDate>Sat, 09 May 2015 23:10:31 +0900</pubDate>
</item>
<item>
<title>버팔로 공유기가 이상할 때</title>
<link>http://blog.wimy.com/421</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;비공식 펌웨어 이거 깔아보니 잘됨&lt;br&gt;현상은 와이파이가 계속 한번씩 안되는거였는데 첨에 펌웨어 자동 업그레이드 후부터 그런거 같았는데... 그래서 버리기 직전에 저거 한번 써보자해서 해봤는데 잘됨&lt;br&gt; 다들 한번 해보세요~&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-421-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/421</guid>
<comments>http://blog.wimy.com/421#entry421comment</comments>
<pubDate>Sat, 09 May 2015 23:03:10 +0900</pubDate>
</item>
<item>
<title>[책] 프로그래머가 몰랐던 멀티코어 CPU 이야기</title>
<link>http://blog.wimy.com/420</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;서버 프로그래머라면 확 땡기는 제목을 가진 &quot;멀티코어 CPU 이야기&quot; 책을 사둔지는 꽤 된 것 같은데 이상하게 어려울 것이라는 생각에 책을 펼쳐보지 않았던 것 같다 -_-;;; 일단 읽어보니 쉽고 재미있게 적혀있고, 내가 컴퓨터과학을 전공하여 그나마 한번쯤은 들어본 단어들도 많이 나왔다. 항상 책을 읽고나서 좋은 책이었으면 하는 생각이 &quot;왜 좀 더 빨리 이 책을 읽지 않았을까... ㅠㅜ&quot; 이 책도 그런 책 중의 하나가 될 것 같다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;멀티코어 CPU 의 동작 방식을 차근차근 풀어나가면서 이런저런 기법들로 CPU 가 돌아가고, 우리는 프로그래밍을 할 때 이런 것들을 고려하면 좋겠다 정도로 이 책을 요약....(너무 짧은가...)할 수 있을 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;이 책을 보고 뽐뿌를 받아서, 미루고 있던 멀티스레드 적용을&amp;nbsp;ZViewer 의 디코딩 쓰레드를 FileIO 와 Decode 스레드로 분리해서 적용을 해봤는데 대략 2개의 이미지를 읽는데 기존의 60%의 시간만 걸렸다. 만족 중~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;책의 밑줄 친 내용은 &lt;a href=&quot;https://docs.google.com/document/d/105D0-K746Mgk-scuDWUVmuKxcs_a3De4n9r0j_ysJYw/edit?usp=sharing&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;구글 문서[링크]&lt;/a&gt;로 정리했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-420-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>Book</category>
<category>김민장</category>
<category>책</category>
<category>프로그래머가 몰랐던 멀티코어 CPU 이야기</category>
<author>zelon</author>
<guid>http://blog.wimy.com/420</guid>
<comments>http://blog.wimy.com/420#entry420comment</comments>
<pubDate>Fri, 13 Mar 2015 22:46:00 +0900</pubDate>
</item>
<item>
<title>프로그래머의 정파와 사파</title>
<link>http://blog.wimy.com/419</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;난 열혈강호를 좋아한다. 팀장님의 정파 사파 이론.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;구글 검색을 바로 하면 사파, API Manual 을 뒤진다면 정파 등등&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-419-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<author>zelon</author>
<guid>http://blog.wimy.com/419</guid>
<comments>http://blog.wimy.com/419#entry419comment</comments>
<pubDate>Wed, 04 Mar 2015 23:15:37 +0900</pubDate>
</item>
<item>
<title>boost 라이브러리 사용 중 링크 에러</title>
<link>http://blog.wimy.com/418</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;갑자기 boost 라이브러리의 asio 를 써보고 싶어져서 boost 를 다운받아서 잠깐 매뉴얼을 읽어본 후에 하라는 대로 bootstrap 과 b2 를 실행해서 라이브러리 빌드를 한 다음에 Visual Studio 2013 에서 asioTest 프로젝트를 만든 후 include/lib 디렉토리를 제대로 설정 후 빌드를 걸었더니 다음과 같은 링크 에러가 났다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;Error &amp;nbsp; &amp;nbsp;1 &amp;nbsp; &amp;nbsp;error LNK2019: unresolved external symbol &quot;class boost::system::error_category const &amp;amp; __cdecl boost::system::system_category(void)&quot; (?system_category@system@boost@@YAAEBVerror_category@12@XZ) referenced in function &quot;public: __cdecl boost::system::error_code::error_code(void)&quot; (??0error_code@system@boost@@QEAA@XZ) &amp;nbsp; &amp;nbsp;E:\git\asioTest\asioTest\asioTest.obj &amp;nbsp; &amp;nbsp;asioTest&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Error &amp;nbsp; &amp;nbsp;2 &amp;nbsp; &amp;nbsp;error LNK2019: unresolved external symbol &quot;class boost::system::error_category const &amp;amp; __cdecl boost::system::generic_category(void)&quot; (?generic_category@system@boost@@YAAEBVerror_category@12@XZ) referenced in function &quot;void __cdecl boost::system::`dynamic initializer for 'errno_ecat''(void)&quot; (??__Eerrno_ecat@system@boost@@YAXXZ) &amp;nbsp; &amp;nbsp;E:\git\asioTest\asioTest\asioTest.obj &amp;nbsp; &amp;nbsp;asioTest&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;대충 해석해보면, boost::system::system_category 를 찾을 수 없다는건데, 강제적으로 라이브러리 파일 링크를 걸어봐도 안되고, 도통 알 수가 없었다. 그러다가 asio 를 사용 중인&amp;nbsp;지인의 도움을 받아서 이리저리 비교해보다가 그 분도 링크 에러가 난 적이 있다면서, Win32 build 에서는 같은 에러가 나는 것을 보게 되었다...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;그랬다. 나는 요즘 계속 x64 프로그래밍만 하고 있어서 무의식적으로 x64 로 프로젝트를 설정했는데, boost 라이브러리는 win32 로 빌드가 기본이었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;b2 address-model=64 로 빌드를 다시 하니 링크 오류 해결~!!&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ps: 왜 boost 라이브러리에는 x86 이니 x64 같은게 lib 파일이름에 없을까라며 괜히 욕해본다;;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-418-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>개발관련</category>
<category>asio</category>
<category>Boost</category>
<category>Library</category>
<category>Link Error</category>
<category>Visual Studio</category>
<category>X64</category>
<category>X86</category>
<category>라이브러리</category>
<author>zelon</author>
<guid>http://blog.wimy.com/418</guid>
<comments>http://blog.wimy.com/418#entry418comment</comments>
<pubDate>Fri, 09 Jan 2015 01:18:17 +0900</pubDate>
</item>
<item>
<title>Google Inbox 에 대한 생각</title>
<link>http://blog.wimy.com/417</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;난 스마트폰을 자주 쓴다. 버스를 타고 갈 때도, 자기 전에도, 컴퓨터 앞에서도 종종 쓴다. 그리고 트위터도 한다(주로 읽기만 하지만), 페이스북도 한다. 하지만 이런 것들은 짧은 시간동안 하는 것들이다. 예를 들어, 트위터에서 꽤 괜찮은 글을 발견했다. 하지만 난 버스에서 내려야 한다. 그러면 난 SendMe 를 이용해서 해당 링크를 나의 지메일로 보내놓고, 시간이 될 때, 스마트폰의 메일함이나, 데스크탑의 메일함에서 해당 메일을 열어서 천천히 해당 글을 읽어본다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;SendMe - (&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.wimy.android.sendme&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://play.google.com/store/apps/details?id=com.wimy.android.sendme&lt;/a&gt;) 는 한창 안드로이드를 공부할 때 취미로 만들어본 프로그램인데, 안드로이드의 '공유' 를 눌렀을 때 항상 내 메일주소로 해당 내용을 공유하는 간단한 프로그램이다. 쉽게 얘기하자면 지메일을 띄우고, 내 메일 주소, 제목, 본문을 자동으로 넣어주는 셈이다.&amp;nbsp;안드로이드 앱의 많은 앱들이 '공유' 기능을 지원하기 때문에 많은 앱들의 내용을 나에게 메일로 쉽게 내용을 보낼 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;여튼 나는 이렇게 스마트폰을 활용하고 있었는데, 구글에서 Inbox 라는 것을 발표했다. 발표한지는 조금 되었는데 구글에 관심이 많은 나도 '이메일이 얼마나 다르겠어' 라면서 신경을 안 쓰고 있다가,&amp;nbsp;얼마전에 우연히 'inbox 는 지메일을 todo 처럼 관리한다' 는 문구를 보고 급히 초대 신청을 해서 써보게 되었다. 그래서 관련 글들도 조금 살펴봤는데, 구글에서는 많은 사람들이 지메일을 할일목록처럼 사용한다는 사실을 알게되었고 그래서 inbox 가 나왔다고 한다. 사실 나도 SendMe 를 통해서 지메일을 마치 할일목록처럼 사용하고 있었기 때문에, 많은 사람들이 나처럼 지메일을 사용하는구나 싶었다.&amp;nbsp;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;사실 개인적인 이메일보다, 회사에서의 이메일 사용패턴을 생각해보면, 이메일은 정말 '할일목록' 이라는 생각이 많이 든다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;Inbox 를 잠깐 써본 소감은 간단히 얘기하자면 '지메일의 용어를 바꾸고, 알림을 추가했다' 정도이다. 기본 메일 목록을 할일 목록으로 생각하고, 보관함은 처리가 끝난 일로 생각한다. 이 방법은 사실 지메일을 할일목록처럼 쓰던 많은 사람들이 머릿속으로 생각하고 있던 방식일 것이다. 그리고 여기에 할일목록 앱의 기본 기능 중 하나인 알람을 넣었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;사람들의 사용 패턴을 분석하고, 그에 기반하여 새로운 관점을 만들어내었다. 이런 형태로 얼마나 많은 사람들이 사용할지는 모르겠지만 나에게는 정말 맞춤앱이라는 생각까지 든다. 구글에서 앞으로 내놓을 새로운 관점들도 기대한다.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-417-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>IT</category>
<category>Google</category>
<category>inbox</category>
<category>sendme</category>
<category>구글</category>
<category>인박스</category>
<author>zelon</author>
<guid>http://blog.wimy.com/417</guid>
<comments>http://blog.wimy.com/417#entry417comment</comments>
<pubDate>Sun, 14 Dec 2014 13:22:49 +0900</pubDate>
</item>
<item>
<title>Code Complete 를 읽고...</title>
<link>http://blog.wimy.com/416</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.aladin.co.kr/shop/wproduct.aspx?ISBN=8956742561&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Code Complete 2nd&lt;/a&gt; 를 드디어 다 읽은 기념 포스팅.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;회사 동료들의 추천으로 읽게 되었는데,&amp;nbsp;정말 유명한 책이다. 구현에 집중한 책이라는데 정말 나에게 많은 깨우침을 줬다. 사실 나는 내 스스로를, 우리 팀장님이 사파라고 부르는, 경험에 의존하는 프로그래머의 성격이 강하다고 생각하는데, 나에게 좀더 탄탄한 정파의 무공을 가르쳐주는 책이 아닌가 싶다. 스스로는 경험과 이론이 합쳐져야 제대로 힘을 내지라고 생각하면서도 이론보다는 경험에만 치우친 프로그래밍을 하고 있었다는 반성을 할 수 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;항상 머릿속에서는 '왜 그런지는 모르지만, 뭔가 이상한데...' 라고 생각하던 부분들을 '이래서 뭔가 이상했었군!!!' 이라는 생각을 많이 할 수 있었다. 역시 책을 많이 읽어야 한다는 생각을 다시 일깨워주고, 두 아이의 육아에 지쳤어도 작은 시간을 내어서 하루에 한번씩은 책을 보는 습관을 들여준 책이기도 하다. 꽤 두꺼워서 다 읽고 말겠다는 오기가 생겨서 이기도 하지만, 어쨌든 6개월이 걸려서 다 읽었다 ㅠㅜ&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;누군가 나에게 묻는다면,&amp;nbsp;꼭 읽어보라고 권하고 싶은 책이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;책을 읽으면서 나름 와닿은 구문은 &lt;a href=&quot;https://docs.google.com/document/d/17IDtU7xXY94gTW_bB7mezWVWKGf4qvSLvqKLM68DH3I/edit?usp=sharing&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;[여기]&lt;/a&gt;에 정리해뒀다. 한번씩 다시 읽어보야지~!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-416-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>IT</category>
<author>zelon</author>
<guid>http://blog.wimy.com/416</guid>
<comments>http://blog.wimy.com/416#entry416comment</comments>
<pubDate>Sat, 06 Dec 2014 23:40:46 +0900</pubDate>
</item>
<item>
<title>습관은 무거운 돌을 굴리는 것과 같다</title>
<link>http://blog.wimy.com/415</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;책 읽는 습관을 들이기 위해서 노력하고 있다. 그런데 생각보다 쉽지 않다. 아니, 쉽지 않았다. 책을 읽으려고 하면 어찌나 방해하는 게 많은지... 책을 읽다가 중요한 것들을 메모하려고 컴퓨터를 켜면, 게임이 나를 유혹하고, 스마트폰에 메모하려고 해도 SNS 아이콘에 손이 간다.&amp;nbsp;그리고 책을 조금 읽어도 눈도 아프고, 잠도 온다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;그런데 재미있는 것은 일단 습관이 몸에 배이기 시작하면 이런 것들은 모두 사라진다. 책을 잡으면 1페이지도 읽기 힘들던 내 눈이 이제는 10페이지를 읽어도 아프지 않다. 처음에는 하루에 한 단락만 읽어야지 했던 것이 이제는 두 단락을 읽어도 할만하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;습관은 무거운 돌을 굴리는 것과 같다. 처음에는 무거운 돌을 조금 움직이기도 힘에 버거워서 낑낑되는 데, 한번 굴러가기 시작하면, 하루 이틀은 돌을 굴리지 않아도 계속 쉽게 굴러가고 있다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;처음에는 힘들더라도, 조금 움직이는데 왜 이렇게 힘들지라는 생각이 들더라도, 일단 굴리기 시작하자. 몇번만 힘을 주어 굴리면, 어느새 굴러가는 돌 위에 올라탄 자기 자신을 발견하게 될 것이다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;		&lt;div class=&quot;entry-ccl&quot; style=&quot;float:right;margin-top:0;height:0&quot;&gt;
			&lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/deed.ko&quot; target=&quot;_blank&quot; style=&quot;text-decoration: none&quot;&gt;
				&lt;img id=&quot;ccl-icon-415-0&quot; class=&quot;entry-ccl-by&quot; src=&quot;//t1.daumcdn.net/tistory_admin/static/admin/editor/ccl_black01.png?_version_=77d9ca1e220acebc87b557eb3b12ab5cc83e4162&quot;
				     alt=&quot;저작자 표시&quot; style=&quot;width:15px;height:15px&quot;/&gt;
								&lt;!--
	&lt;rdf:RDF xmlns=&quot;http://web.resource.org/cc/&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;
		&lt;Work rdf:about=&quot;&quot;&gt;
			&lt;license rdf:resource=&quot;http://creativecommons.org/licenses/by-fr/2.0/kr/&quot; /&gt;
		&lt;/Work&gt;
		&lt;License rdf:about=&quot;http://creativecommons.org/licenses/by-fr/&quot;&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Reproduction&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/Distribution&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Notice&quot;/&gt;
			&lt;requires rdf:resource=&quot;http://web.resource.org/cc/Attribution&quot;/&gt;
			&lt;permits rdf:resource=&quot;http://web.resource.org/cc/DerivativeWorks&quot;/&gt;
		&lt;/License&gt;
	&lt;/rdf:RDF&gt;
	--&gt;
			&lt;/a&gt;
		&lt;/div&gt;
		</description>
<category>일반</category>
<author>zelon</author>
<guid>http://blog.wimy.com/415</guid>
<comments>http://blog.wimy.com/415#entry415comment</comments>
<pubDate>Sat, 18 Oct 2014 23:30:17 +0900</pubDate>
</item>
<item>
<title>Google Cloud Storage 를 백업으로 사용하기</title>
<link>http://blog.wimy.com/414</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;구글에서 클라우드(https://cloud.google.com)라는 이름으로 여러 서비스들을 하고 있다. 대표적으로 Google App Engine, Compute Engine, Big Query 등이 있는데, 이 중에 Google Storage 라는 게 있다. AWS 의 S3 에 해당하는, 클라우드 파일 저장 공간쯤되는데, 어느날 구글에서 준 100만원쯤이었나 여튼 큰 쿠폰이 있어서 써보기 시작했었다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;이런 저런 정리를 해보니 내 컴퓨터에서 가장 소중하다고 할만한 것들을 추려보니, 사진과 소스 코드가 남았고, 이들을 정리해서 올려보기로 했다. 대략 용량은 300기가 정도. 모두 올리고 요금을 보니 한달에 약 1만원쯤 나온다. 우리 집에 불이나도 나의 15년 간의 내용이 안전하게 보관된다고 생각하면 크게 나쁘지 않은 요금이라는 생각이었다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;구글의 막강한 클라우드 환경을 사용하고, 최근에는 일본에 IDC 가 생겼기 때문에 속도도 나쁘지 않았다. 그리고 Google App Engine 을 꽤 오래 사용했기 때문에 안정성이나 확장성은 믿을 수 있었다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그런데 막상 쓰기 시작하니 이런저런 문제가 발견되었다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;첫번째로 한글 사용에 문제가 있다. 정확하게는 파일 복사, 즉 업로드를 하는 gsutil 이라는 프로그램에서 윈도우에서(!) 한글 파일을 제대로 업로드하지 못하는 문제가 있다. 파이썬으로 만들어진 프로그램이라서 대충 패치를 해서 쓰고 있긴 하다(대충 우회만 하는 패치라서 구글에 보내봤더니 rejected ㅠㅜ).&lt;/p&gt;&lt;p&gt;&amp;nbsp;두번째도 gsutil 에 관한 것인데, 백업에 맞게(!), 편리하게(!) rsync 라는 명령이 제공된다. 특정 폴더를 클라우드의 특정 폴더에 말그대로 sync 해주는 기능인데, 이게 제대로 동작하지 않는다... rsync -n 으로 복사가 필요한 목록을 뽑은 다음에 rsync 를 실행시켜서 sync 가 되었겠지 했는데, 다시 rsync -n 으로 확인해보면 여전히 복사가 필요하다고 한다... 한글 때문일까...;; 이건 자세히 살펴보지는 않았음&lt;/p&gt;&lt;p&gt;&amp;nbsp;세번째로 웹 기반 회사인 구글이다보니&amp;nbsp;https://console.developers.google.com 에서 웹으로 파일들을 관리할 수 있게 해준다. 그런데 이 웹이 구글의 이름에 걸맞지 않게 버그가 많다. 종종 화면이 멈춰버리고, 파일들을 삭제했는데 응답도 없고, 화면에 삭제한 파일들이 남아있어서 다른 페이지에 갔다가 와야 반영되기도 한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;결론은, Google Cloud Storage 는 윈도우에서 한글에 대한 배려가 부족하고, 웹콘솔은 아직 베타의 느낌이 남아있다. 그러니 이를 이용한 서비스를 개발할 때 이런 내용들을 고려해야 할 것 같다. 아마 구글에서도 인식하고 있으니 조만간 고쳐질 것 같긴한데, 서비스할 때는 한번쯤 체크~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>IT</category>
<author>zelon</author>
<guid>http://blog.wimy.com/414</guid>
<comments>http://blog.wimy.com/414#entry414comment</comments>
<pubDate>Thu, 16 Oct 2014 00:58:44 +0900</pubDate>
</item>
<item>
<title>프로그래머의 실력에 대한 짧은 생각...</title>
<link>http://blog.wimy.com/413</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;프로그래머의 실력에 대해서 고민해본 적이 있다. 누구나 저 사람이 나보다 실력이 있다라는 걸 느낌으로는 알고 있다. 하지만 왜? 라고 질문해본다면, 어떤점을 보면 저사람이 나보다 살력 있음을 알 수 있을까...&lt;br /&gt; 최근 회사 생활을 하면서 이런 생각을 했다. 나는 왜 이렇게 우유부단할까...... 어떤 결정을 내려야할 때 A는 이런 장단점이 있고 B는 이런 장단점이 있다. 모든 일에는 각각의 장단점이 있다는걸 안다. 하지만 결정을 내리기가 힘들다. 이 때 실력자는 A를 선택하라고 한다. 이런저런 이유를 들어서 이 장점이 단점을 상쇄한다. 확고한 기준이 있다. 그렇다고 항상 A가 맞다고 주장하지도 않는다. 유연하면서도 확실히 알고 있다는 느낌.&lt;br /&gt; 요즘 책을 읽다보면, 아... 내가 왠지 찜찜하게 느꼈던게 이거구나라는 생각을 한번씩 한다. 누군가는 나의 그 느낌을 잘 정리해서 객관화시킨 후 하나의 단어로 압축시켜놓았고 실력자들은 그 단어를 사용한다. 경험을 실력으로 바꾸려면 독서가 필요하다.&lt;br /&gt;&lt;br /&gt; 결론은 책을 읽자...... ㅋ&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>IT</category>
<category>실력</category>
<category>프로그래머</category>
<author>zelon</author>
<guid>http://blog.wimy.com/413</guid>
<comments>http://blog.wimy.com/413#entry413comment</comments>
<pubDate>Sat, 23 Aug 2014 16:21:15 +0900</pubDate>
</item>
<item>
<title>이사 후기</title>
<link>http://blog.wimy.com/412</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;이사일번지, 영구클린, Z이사 중 이사일번지로 골랐다. 친절한 상담원과 방문견적과 괜찮은 가격이 원인이었다.&lt;br /&gt;
영구클린은 이사전문이 아니라 청소전문인거 같은 느낌과 좀 비싼가격. 그리고 Z이사는 작은 업체라서 그런지 다음날 전화주겠다며 전화도 안주고... 기다리다가 그냥 이사일번지로 결정 ㅋ&lt;/p&gt;
&lt;p&gt; 사람과 대면하는 직업은 정말 친절도가 절반이상은 먹고 들어가는듯. 그러고보니 얼마전에 에어콘을 살 때도 하이마트의 직원과 엘지베스트샵의 친절도 차이가 생각난다. 엘지베스트샵 직원분의 친절은 지금 생각해도 흐뭇할 정도. 뭐가 어떻게 다른지, 이 모델을 왜 권하는지 친절히 설명해주고, 질문도 당연히 잘 대답해주고. 하이마트는 일단 멀뚱멀뚱서있고 그냥 이 모델 사시면 돱니다라고.... 그리고 나올 때 가관인 한마디. 다른데 알아보시고 오시면 더 할인해드릴께요~ 저런말을 하는 직원에게서 물건을 사고 싶지는 않다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;인테리어 업체는 동네 인테리어 업체를 골랐는데, 나중에 AS 가 쉬울 거라는 생각이었다. 그런데 조금 아쉬운데, 부동산에서 권해주는 업체에게 맡겼는데, 나중에 동네 가게에서 들은 얘기로는 해당 부동산과 인테리어 업체는 서로 연결되어 있다는 것. 그리고 그 옆의 인테리어 업체가 작지만 더 잘한다는 얘기... 부동산에서 권해주는 인테리어 업체는 동네 가게에서 평판을 슬쩍 물어보자.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<author>zelon</author>
<guid>http://blog.wimy.com/412</guid>
<comments>http://blog.wimy.com/412#entry412comment</comments>
<pubDate>Sat, 09 Aug 2014 18:27:15 +0900</pubDate>
</item>
<item>
<title>게임서버에서의 non paged pool memory 누적 현상</title>
<link>http://blog.wimy.com/411</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;내부 게임 서버 테스트 중에 이상하게 non paged pool memory 가 어느 순간부터 점점 증가하다가 갑자기 치솟아서 메모리를 모두 소모하는 문제가 발생했다.&lt;br&gt;
 원인은 더미 클라이언트를 여러개 띄워서 테스트를 했는데 더미 클라이언트의 pc 가 점점 느려져서 패킷을 제대로 받지 못하자 서버가 네트웍으로 보낸 패킷들이 제대로 소모되지 못하고 non paged pool 에 쌓인것.&lt;br&gt;
 누군가로부터 들은바로는 클라이언트마다 패킷큐를 두고 하나의 패킷이 다 전송되었음을 완료하고난 후에 다음 패킷을 보내는 방식으로는 괜찮을거라고.... 하지만 아직 정확한 테스트는 안해봤음;;&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>game server</category>
<category>non paged pool</category>
<author>zelon</author>
<guid>http://blog.wimy.com/411</guid>
<comments>http://blog.wimy.com/411#entry411comment</comments>
<pubDate>Fri, 25 Jul 2014 23:20:21 +0900</pubDate>
</item>
<item>
<title>모바일 티스토리 가 생겨서...</title>
<link>http://blog.wimy.com/410</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;원래 블로그에는 정성들여서 정리한 글을 쓰려고 노력하는 편인데 그래서 글감이 계속 미뤄지다가 사라지는 경우가 많았다.&lt;/p&gt;
&lt;p&gt; 그래서 모바일 티스토리가 나온 김에 바로바로 내용이 전달되는 수준에서 글을 적고 나중에 시간이 될 때 제대로 정리하자....(아마 정리 안 할거야 ㅠㅜ)&lt;/p&gt;
&lt;p&gt; 특히 개발관련글에 스샷올리고 이런거 좋아하지만 육아와 함께해서 제대로 정리는 힘들듯하니. 일단 정보공유 차원에서라도 적고보자!&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>일반</category>
<author>zelon</author>
<guid>http://blog.wimy.com/410</guid>
<comments>http://blog.wimy.com/410#entry410comment</comments>
<pubDate>Fri, 25 Jul 2014 23:13:20 +0900</pubDate>
</item>
<item>
<title>Visual C++ 템플릿에서 특정 타입에만 브레이크포인트 설정하기</title>
<link>http://blog.wimy.com/409</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;일단 코드에 브레이크포인트를 설정하고 실행 중에 걸리면 오른쪽 클릭해서 디스어셈블한다. 그러면 어떤 타입의 함수를 볼 것이냐 선택할 수 있는데 원하는 타입을 선택하면 원하는 타입의 어셈블리 코드로 가게되고 거기에 브레이크포인트를 설정하면 된다.&lt;/p&gt;
&lt;p&gt; 즉, 템플릿은 여러 타입이 각자의 어셈블리를 만들기 때문에 특정 타입의 어셈블리에 브레이크포인트를 걸어주는 것이다.&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>템플릿 브레이크포인트 어셈블리 c++ template assembly breakpoint</category>
<author>zelon</author>
<guid>http://blog.wimy.com/409</guid>
<comments>http://blog.wimy.com/409#entry409comment</comments>
<pubDate>Fri, 25 Jul 2014 23:08:58 +0900</pubDate>
</item>
<item>
<title>github 의 Atom 에디터 윈도우 빌드</title>
<link>http://blog.wimy.com/408</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;이제 공식 다운로드가 생겨서 이 글에서의 링크는 내립니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;-----------------------------------------&lt;/p&gt;&lt;p&gt;&amp;nbsp;근래에 한참 프로그래머들의 화두가 되었던 Atom editor(&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://atom.io/&lt;/a&gt;). github 에서 만드는 프로그래머를 위한 편집기를 표방하고 있어서 관심있게 보고 있었는데, 얼마전에 누구나 다운로드 가능하도록 되었다. 그래서 써보려고 하는데, 맥용만 다운로드가 가능해서... 일단 맥에서 써봤지만... 아무래도 윈도우 프로그래머다보니 윈도우용을 써보고 싶었다. 그래서 집에서 가지고 놀던 Azure 에다가 가상머신을 하나 만들어서 빌드 환경을 구축해서 빌드시켰다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;빌드 과정은&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/atom/atom/blob/master/docs/build-instructions/windows.md&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;https://github.com/atom/atom/blob/master/docs/build-instructions/windows.md&lt;/a&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt; 에 적힌대로하면 별 문제없었고, 다만 간과하기 쉬운게 Visual Studio 2010 Express 의 SP1 (Servicepack1) 을 꼭 설치해야한다는 것과 환경변수 path 경로에&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;atom/repo/build/node_modules 를 추가해야한다는 정도.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;다운로드 - 삭제함&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;위의 다운로드는 '윈도우 버젼'이 공식 릴리즈되거나, 드랍박스에 뭔가 문제가 생기거나, 여튼 임의로 내려갈 수 있으며, 현재 atom 에디터가 공식버젼도 불안정한 상태라는 것을 어느 정도는 감안하고 쓰세요~&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>ATOM</category>
<category>atom editor</category>
<category>build</category>
<category>Github</category>
<category>빌드</category>
<category>아톰</category>
<category>아톰 에디터</category>
<author>zelon</author>
<guid>http://blog.wimy.com/408</guid>
<comments>http://blog.wimy.com/408#entry408comment</comments>
<pubDate>Wed, 21 May 2014 22:27:08 +0900</pubDate>
</item>
<item>
<title>YouTube 임베드를 모바일 웹페이지에서 쓸 때 주의점</title>
<link>http://blog.wimy.com/407</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://box.wimy.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://box.wimy.com/&lt;/a&gt; 을 만들어놓고 많은 시간이 지나서, 한번씩 이런저런 버그들을 고치고는 하지만, 모바일에서 재생이 제대로 안되는 건 정말 골치 아픈 일이다. 특히 작년까지만 해도 대부분의 스마트폰에서는 동영상을 full-frame 으로 보여주지도 못했으니... 이제는 그나마 성능은 어느 정도 받쳐주는 것 같다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그런데 최근에 다시 스마트 폰에서 해보니 재생이 안되는 것이다. 이래저래 디버깅을 해보다가 안되어서 구글 공식 문서를 뒤져보니, 이런 내용이 나왔다 :&amp;nbsp;&lt;a href=&quot;https://developers.google.com/youtube/iframe_api_reference#Mobile_considerations&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developers.google.com/youtube/iframe_api_reference#Mobile_considerations&lt;/a&gt;&amp;nbsp;대충 읽어보면, &quot;데이터망에서 원치않은 다운로드를 막기 위해서 임베드된 미디어는 자동으로 재생될 수 없다&quot; 그래서, playVideo() 같은 함수들은 모바일 환경에서 재생이 제대로 되지 않는 것이었다. 그래서 필요한 것은?? 바로 &quot;사용자의 인터랙션&quot; 이다. 즉, 한번 터치해주면 잘 동작한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그래서 html5 모드에서는 기본 재생을 일부러 막고, 사용자의 입력으로 재생이 시작되기를 기다린 후, 재생이 감지되면, 기존의 자동 플레이 모드처럼 동작하도록 수정했다. '한번만 터치되면', 그 다음부터는 playVideo() 등의 함수가 제대로 동작한다. 단 한번의 터치가 필요할 뿐...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>embed</category>
<category>html5</category>
<category>Video</category>
<category>youtube</category>
<category>동영상</category>
<category>모바일</category>
<category>유튜브</category>
<category>임베드</category>
<author>zelon</author>
<guid>http://blog.wimy.com/407</guid>
<comments>http://blog.wimy.com/407#entry407comment</comments>
<pubDate>Wed, 16 Apr 2014 00:12:56 +0900</pubDate>
</item>
<item>
<title>Google Cloud DNS 설정하기 - How to set up google cloud dns</title>
<link>http://blog.wimy.com/406</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;Google에서 Cloud Platfrom 의 일원으로 Cloud DNS(&lt;a href=&quot;https://cloud.google.com/products/cloud-dns/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://cloud.google.com/products/cloud-dns/&lt;/a&gt;) 를 발표했다.&amp;nbsp;DNSEver 의 유료화와 비슷한 시기에 발표되어서 관심을 가지고 설정을 해보았다. 난 이미 DNSEver 유료 결재를 해버린건 함정;;&lt;/p&gt;&lt;p&gt;&amp;nbsp;가격은 현재(2014.04) 25개까지의 zone 을 유지하는데 한달에 zone 하나당 0.2달러. 100만 쿼리에 0.4달러. 나쁘지 않다. DNSEver 와 비교해도 나쁘지 않다 ㅋ 하지만 아직은 설정하기가 DNSEver 가 훨씬 편하다. 아마 google 에서 웹 인터페이스를 곧 제공하지 않을까 예상해본다(이미 API 도 있으니...)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;일단 &lt;a href=&quot;https://console.developers.google.com/project&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://console.developers.google.com/project&lt;/a&gt; 에서 새로운 프로젝트를 만든 후, 아래의 그림처럼 API 를 열어주자. &quot;Google Cloud DNS API&quot; 를 ON 하려면 enable billing 을 해야한다. 카드 입력하면 1달러 우선 결재 +_+&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile22.uf.tistory.com/image/2273483953429F44077D11&quot; filemime=&quot;image/jpeg&quot; filename=&quot;google_cloud_dns.png&quot; height=&quot;190&quot; style=&quot;&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt; 이제 구글 Cloud DNS API 를 사용할 준비가 되었으면,&amp;nbsp;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;구글 클라우드 SDK 를 다운로드 하자. &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;a href=&quot;https://developers.google.com/cloud/sdk/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developers.google.com/cloud/sdk/&lt;/a&gt; 에서 다운로드 하면 된다. 다운로드 후 압축을 풀고, install.sh (리눅스나 맥)나 install.bat (윈도우)를 실행시키자. path 에 설치된 bin 경로를 추가하고&amp;nbsp;아래의 명령으로 dns 명령을 실행할 수 있게하자.(혹시나 아래의 명령이 기존의 SDK 를 업데이트만 하고 dns components 를 설치하지 않을 수도 있으니 이상하게 명령이 안먹히면 아래의 명령을 다시 한번 실행해보자)&lt;/span&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: inherit; font-style: inherit; font-weight: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250);&quot;&gt;gcloud components update dns&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;그런 후, 아래 명령으로 간단히 커맨드 로그인을 하고(웹 브라우저가 뜨면서 인증을 물어본다)&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: inherit; font-style: inherit; font-weight: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250);&quot;&gt;gcloud auth login&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;zone 을 생성해보자.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;gcloud dns managed&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;zone create &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;dns_name&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 136, 0);&quot;&gt;&quot;example.com.&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 136, 0);&quot;&gt;&quot;A test zone&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt; examplezonename&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;이제 만든 zone 을 edit 해보자.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;gcloud dns records &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;font-family: inherit; font-size: 1em; line-height: 1.5; background-color: rgb(250, 250, 250); margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-style: inherit; vertical-align: baseline; color: rgb(0, 0, 0);&quot;&gt;examplezonename edit&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;윈도우에서는 메모장이 뜨고, 맥에서는 vi 로 아래와 비슷한 내용이 편집할 준비가 된다. 이제 여기의 내용을 고쳐서 dns API 에 명령을 보내게 된다.&amp;nbsp;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &quot;additions&quot;: [&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;kind&quot;: &quot;dns#resourceRecordSet&quot;,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;wimy.com.&quot;,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;rrdatas&quot;: [&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ns-cloud-e1.googledomains.com. dns-admin.google.com. 8 21600 3600 1209600 300&quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ttl&quot;: 21600,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;type&quot;: &quot;SOA&quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; ],&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &quot;deletions&quot;: [&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;kind&quot;: &quot;dns#resourceRecordSet&quot;,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;wimy.com.&quot;,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;rrdatas&quot;: [&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ns-cloud-e1.googledomains.com. dns-admin.google.com. 7 21600 3600 1209600 300&quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ttl&quot;: 21600,&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;type&quot;: &quot;SOA&quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; ]&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;위의 내용을 대충 훑어보면, 간단한 형식의 JSON 이다. 일단 내가 이 도메인에 사용할&amp;nbsp;name server 의 이름이 보이고 additions 에 추가할 내용, deletions 에 삭제할 내용을 추가해서 저장하고 편집기를 닫으면 google dns API 가 저장된 파일을 보고 적절한 명령을 내려주게 된다. additions 에 어떤 형식으로 넣을지는&amp;nbsp;&lt;a href=&quot;https://developers.google.com/cloud-dns/migrating-bind-zone-command-line&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developers.google.com/cloud-dns/migrating-bind-zone-command-line&lt;/a&gt; 를 참고하자. 대부분의 형식을 알 수 있다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;참고로, JSON 형식을 잘못입력하면(, 를 빠트리면....) 처음부터 다시 입력해야 하므로, 많은 내용을 입력할 때는 다른 메모장을 열어서 사용하거나 vi 의 split 기능을 이용해서 미리 다른 파일에 저장해두자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;이 포스팅의 내용은&amp;nbsp;&lt;a href=&quot;https://developers.google.com/cloud-dns/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developers.google.com/cloud-dns/&lt;/a&gt; 의 내용을 간략히 옮긴 것이므로, 추가 사항은 당연히 이 공식 홈페이지를 참고하세요~~ :)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>IT</category>
<category>cloud</category>
<category>dns</category>
<category>domain</category>
<category>Google</category>
<category>google cloud dns</category>
<category>nameserver</category>
<category>구글</category>
<author>zelon</author>
<guid>http://blog.wimy.com/406</guid>
<comments>http://blog.wimy.com/406#entry406comment</comments>
<pubDate>Mon, 07 Apr 2014 22:26:02 +0900</pubDate>
</item>
<item>
<title>바이오쇼크1 플레이 후기</title>
<link>http://blog.wimy.com/405</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;오랜만에 패키지 게임을 해보았다. 바이오쇼크1.&lt;/p&gt;&lt;p&gt;오랜만의 ftp 게임에 오랜만의 호러물이라서 처음에는 움찔움찔 놀라면서 진행했었는데 에피소드3정도되니, 게임 플레이의 긴장감은 사라지고(아마 업그레이드로 인한 난이도 하락과 더이상 새롭지 않은 몬스터들 때문인듯), 스토리에 대한 궁금증이 엔딩을 보게한 듯하다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;스토리는 초반과 반전 이후의 후반이 좀 그럴싸하고, 중간 과정은 약간의 억지가 있는듯하다. 뭔가 불필요한 내용들이 나열되었다는 느낌이랄까...&lt;/p&gt;&lt;p&gt;&amp;nbsp;다만 후반에 플라스미드에 제한을 걸어서 답답하지만 약간의 긴장을 더했고, 덕분에 하나의 플라스미드(나는 주로 얼음공격만 했음)만 쓰게 되는 경험에서 조금은 벗어나게 해주었다. 그리고 잠수복을 쓰면서 약간의 시야의 제한도 주어서 조금이나마 다른 경험을 하게 해주었다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;중반에 조금 심심한 느낌이 좀 아쉽긴 하지만, 게임 전반적으로는 꽤 괜찮았고, 스토리에 많은 점수를 주고 싶다. 오랜만에 패키지 게임을 해서인지, 하고나서 이런저런 배경설정도 찾아보고, 주요 장면도 다시 보고, 즐거운 시간이었던듯~&lt;/p&gt;&lt;p&gt;&amp;nbsp;스토리 반전은 역시 최고. 오랫동안 기억에 남는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;전체 분석 :&amp;nbsp;http://sarammugur.egloos.com/1588650&lt;/p&gt;&lt;p&gt;주요 단어(영어) : http://bioshock.wikia.com/wiki/A_man_chooses,_a_slave_obeys&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>게임</category>
<author>zelon</author>
<guid>http://blog.wimy.com/405</guid>
<comments>http://blog.wimy.com/405#entry405comment</comments>
<pubDate>Mon, 07 Apr 2014 21:04:02 +0900</pubDate>
</item>
<item>
<title>[책내용정리] 읽기 좋은 코드가 좋은 코드다</title>
<link>http://blog.wimy.com/404</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;예전에 읽고 위키에만 정리했었는데, 블로그로 옮김. 책에는 당연히 더 많은 내용들이 있지만, 나에게 많이 와닿던 부분들만 정리.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;내가 만든 코드를 먼 훗날 내가 다시 봐도 잘 알아볼 수 있게 하자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot; id=&quot;docs-internal-guid-640116cf-75cd-bf96-4f87-662f1f617582&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;코드는 다른 사람이 이해하는 데 들이는 시간을 최소화하는 방식으로 작성되어야 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;분량이 적다고 이해하는 시간이 짧은 것만은 아니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;잘 구성된 아키텍처, 테스트의 용이성 등이 쉬운 코드 작성과 충돌을 일으키지는 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;좀 더 분명한 이름을 짓자. 오해하기 쉬운 이름을 피하자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;단위가 헛갈릴 수 있으면 단위를 변수명에 붙이자. elapsed_ms, delay_secs&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;좁은 scope 에서는 짧은 이름도 괜찮다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;팀에 새로 합류한 사람이 이름이 의미하는 바를 이해할 수 있다며느, 그 일므은 괜찮은 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;불필요한 단어 제거하기. ConvertToString() 은 ToString() 으로 써도 의미가 줄어들지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;본인이 의도한 바와 다르게 다른 사람이 의미를 해석할 수 있는 단어는 피하자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;변수의 범위를 제한할 때, 그 값까지 포함하면, min/max, first/last, 처음은 포함하지만 끝은 포함하지 않으면, begin/end, &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;bool 변수는 부정적인 이름은 피하는 것이 좋다. disable_ssl 보다는 use_ssl 이 좋다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;어떤 상수가 특정한 값을 갖게 된 ‘사연’ 은 주석으로 넣어도 좋다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;주석이 복잡해지면 읽기가 코드만큼 어렵다. 간결한 주석을 달자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;조건문에서, 변화하는 값을 왼쪽에 두고, 변하지 않는 값을 오른쪽에 두는 것이 좋다. &amp;nbsp;그래서 while ( bytes_received &amp;lt; bytes_expected ) 가 좋다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;조건문에서, 부정이 아닌 긍정을 다루어라. if ( !debug ) 보다는 if ( debug ) 를 선호하자&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 조건문에서, 간단한 것을 먼저 처리해라.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 조건문에서, 더 흥미롭고, 확실한 것을 먼저 다루어라.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 삼항 연산자는 정말 간단한 것이 아니라면 쓰지 말자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 의미를 쉽게 파악하기 위해 별다른 로직이 없지만, 따로 만들어낸 변수 - 요약 변수&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 문제를 다르게 접근하면 더욱 간단하게 처리되는 것들이 있다. 특히 범위 체크.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 아래와 같은 불필요한 임시 변수는 제거하자.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre;&quot;&gt;	&lt;/span&gt;- 복잡한 표현을 잘게 나누지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre;&quot;&gt;	&lt;/span&gt;- 명확성에 도움이 되지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre;&quot;&gt;	&lt;/span&gt;- 한 번만 사용되어 중복된 코드를 압축하지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;변수의 범위를 좁혀라. 사용하기 직전에 선언해라. 많은 메소드를 정적(static)으로 만들어, 멤버 변수를 사용하지 않음을 알려라.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;const 를 사용하면 이 변수가 어디서 변경되는지를 기억하기 쉽다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;일반적인 코드와 프로젝트를 위한 코드를 분리하자. 좀 더 문제에 집중하기 쉽고, 재사용성도 높아진다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 코드 베이스를 작게 유지해라. 이미 존재하는 라이브러리를 써라. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;매일 15분씩 자신의 표준 라이브러리에 있는 모든 함수/모듈/형들의 이름을 읽어라.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;코딩 대신 유닉스 도구 활용하기&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre;&quot;&gt;	&lt;/span&gt;- cat access.log | awk ‘{ print $5 “ “ $7 }’ | egrep “[45]..$” \ | sort | uniq -c | sort -nr&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre;&quot;&gt;	&lt;/span&gt;- &amp;nbsp;4xx 혹은 5xx 응답코드를 가장 많이 담는 url 을 log 에서 찾는 프로그램&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt; 유지보수하기 쉽고, 추가하기 쉽게 테스트 케이스를 만들어라. 테스트하기 쉽게 코드를 만들어라.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-weight:normal;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.15;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size:15px;font-family:Arial;color:#000000;background-color:transparent;font-weight:normal;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap;&quot;&gt;assertEqual 처럼 의도를 나타내는 assert 를 가능하면 사용해라&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 15px; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 15px; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 15px; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 15px; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 15px; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>Book</category>
<category>읽기좋은코드</category>
<category>책</category>
<author>zelon</author>
<guid>http://blog.wimy.com/404</guid>
<comments>http://blog.wimy.com/404#entry404comment</comments>
<pubDate>Thu, 09 Jan 2014 16:01:50 +0900</pubDate>
</item>
<item>
<title>넥서스5, 넥서스7 이 윈도우에서 MTP 연결이 제대로 되지 않을때</title>
<link>http://blog.wimy.com/403</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;장치 관리자를 열어놓고, 넥서스5/7 를 연결하면 &quot;새롭게 추가되는 장치 - 이름이 아마 AD inteface 이런거임&quot;에서 오른쪽 클릭해서 '제거' -&amp;gt; '드라이버도 함께 제거' 한 후, 케이블을 분리 후 다시 연결하면 제대로 MTP 로 잡힌다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;아마 Android SDK 를 업데이트하면서 이런 문제가 생긴 것으로 '짐작'만 하고 있음;;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>IT</category>
<category>MTP</category>
<category>넥서스5</category>
<category>넥서스7</category>
<author>zelon</author>
<guid>http://blog.wimy.com/403</guid>
<comments>http://blog.wimy.com/403#entry403comment</comments>
<pubDate>Mon, 25 Nov 2013 21:52:07 +0900</pubDate>
</item>
<item>
<title>eclipse 마켓을 통해 쉽게 안드로이드 개발 환경 구축하기</title>
<link>http://blog.wimy.com/402</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;넥서스7이 생긴 바람에 오랜만에 안드로이드 개발환경을 구축할 일이 생겨서 eclipse 에서 설치를 하려고 생각했는데, 가만히 생각해보니 ADT 만 설치하면 ADT 가 sdk 를 설치해준 기억이 나서, ADT 가 왠지 eclipse marketplace 에 있을거 같아서 한번 찾아보니 왠걸(!!!) 있었다. 그래서 설치해보니 매우 잘되어서 포스팅 시작~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;*** 알고보니 지금은 http://d.android.com/ 에서 eclipse + ADT + SDK 까지 한번에 통합된 것을 받을 수 있네요 ㅠㅜ 아래 포스팅은 그냥 eclipse 가 이미 있을 때 안드로이드 개발환경 쉽게 붙이는 방법 정도로만....(아... 세상 빨리 변하네요 ㅋ) ***&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;일단은 JDK 깔고, eclipse 는 깐다. 이제 ADT 를 주소를 넣고 깔고, SDK 를 다운받아서 설정하고 이런것을 해야하겠지만, ADT 와 SDK 는 아래와 같이 쉽게 설치할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;eclipse 를 띄운 후, 아래처럼 Eclipse Marketplace 클릭&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:365px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile29.uf.tistory.com/image/1836083B50AA36AD30B175&quot; filemime=&quot;image/jpeg&quot; filename=&quot;eclipse_marketplace.png&quot; height=&quot;363&quot; width=&quot;365&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;android 로 검색한 후, 제작자가 Google 인 것을 install~&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:578px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile25.uf.tistory.com/image/0341903B50AA36AE19ACC3&quot; filemime=&quot;image/jpeg&quot; filename=&quot;eclipse_adt.png&quot; height=&quot;820&quot; width=&quot;578&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;중간 설치 과정이야 뻔하게 ok, agree 등을 하고 설치한 후, eclipse 재시작 후 아래 화면에서 Close 하고, Install new SDK 를 선택해서 SDK 를 받아오자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile29.uf.tistory.com/image/124C2C3B50AA36AE0867BD&quot; filemime=&quot;image/jpeg&quot; filename=&quot;eclipse_adt_SDK.png&quot; height=&quot;633&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;아래처럼 Android SDK Manager 를 띄울 수 있게 되면서 안드로이드 개발환경 설치 성공~~!!&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile2.uf.tistory.com/image/1341793B50AA36AF1A61A0&quot; filemime=&quot;image/jpeg&quot; filename=&quot;eclipse_result.png&quot; height=&quot;453&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;포스팅하기 전에 잠깐 안드로이드 개발환경 글을 검색해보았는데, 너무 예전 글이 많다. 그리고 시중에 있는 안드로이드 책들도 상당히 예전 방법과 예전 환경에서 설치하고 있어서 안타까운 마음이 든다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&amp;nbsp;이렇게 쉽게 설치할 수 있는데!!!!!&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ps : 많이 퍼뜨려주세요...;;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>Android</category>
<category>development environment</category>
<category>Eclipse</category>
<category>eclipse marketplace</category>
<category>marketplace</category>
<category>개발환경</category>
<category>안드로이드</category>
<category>이클립스</category>
<author>zelon</author>
<guid>http://blog.wimy.com/402</guid>
<comments>http://blog.wimy.com/402#entry402comment</comments>
<pubDate>Mon, 19 Nov 2012 22:44:51 +0900</pubDate>
</item>
<item>
<title>구글 핵페어 참가 후기</title>
<link>http://blog.wimy.com/401</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;P&gt;&amp;nbsp;얼마전 구글 코리아 주최의 핵페어가 있었다.(&lt;A class=tx-link href=&quot;http://googlekoreablog.blogspot.kr/2012/11/google-hackfair_6.html&quot; target=_blank&gt;http://googlekoreablog.blogspot.kr/2012/11/google-hackfair_6.html&lt;/A&gt;)&lt;/P&gt;
&lt;P&gt;&amp;nbsp;난 평소에 wimybox 를 만들면서 생각했던 아이디어로 WimyLime(&lt;A class=tx-link href=&quot;http://lime.wimy.com/&quot; target=_blank&gt;http://lime.wimy.com/&lt;/A&gt;)이라는 프로젝트로 참여를 했다. 바로 YouTube 에 있는 뮤직 비디오들에 리듬 액션 게임 요소를 넣어서 게임을 만들면 어떨까라는 생각! 리듬 액션 게임을 한번 만들어볼 생각은 전에도 했었지만, 음악과 리듬을 구하는게 쉽지 않아서, 음악은 YouTube 에 있는 공식 뮤직비디오들을 가져오고, 리듬은 직접 쉽게 입력할 수 있으면 어떨까해서... 시작했다.&lt;/P&gt;
&lt;P&gt;&amp;nbsp;평소에 매우 조금씩 만들어오던 것을 시간을 조금 더 투자해서 제출해보았고, 다행히도 전시작품으로 선정되었다.&lt;/P&gt;
&lt;P&gt;&amp;nbsp;경북 구미에서 직장 생활을 할 때는, 개발자로써의 공식 활동(?)이라는 것을 블로그에 글을 쓰는 것 정도였는데, 수도권으로 직장과 집을 옮기면서,&amp;nbsp;지난 Google DevFest 후 다음 행사인 듯한 Google Hackfair 에 참가할 수 있었다. (역시 사람은 서울로...;; )&lt;/P&gt;
&lt;P&gt;&amp;nbsp;17일~18일 동안 내 작품의 부스를 지키면서 약 200명 정도한테 설명을 했던 것 같다. 장점은 뭐고, 타블렛에서도 되고 등등... 좀더 관심을 가지는 분들은 직접 플레이도 해보시고, 리듬도 만들어 보시고, 어떤 분은 라운지의 PC 에서 리듬을 만들었다고 오신 분도 계시고, 명함을 주시는 분, 사업화에 대한 질문을 하시는 분, 정말 즐기시는 분(!), 개선방향을 제시하시는 분&amp;nbsp;등 다양한 분들이 오셨었다.&lt;/P&gt;
&lt;P&gt;&amp;nbsp;트위터에도 적었지만,&amp;nbsp;&lt;/P&gt;
&lt;BLOCKQUOTE class=tx-quote-tistory&gt;
&lt;P&gt;누군가가 나의 아이디어를 평가해주고 의견도 제시해주고 칭찬도 해주고, 다른 멋진 프로젝트 구경도 하고 기념품도 받고, 업계 사람들도 만나고. 좋은 경험이다~!&lt;/P&gt;&lt;/BLOCKQUOTE&gt;
&lt;P&gt;&amp;nbsp;참고로 기념품은 넥서스7, 구글TV, 구글컵, 구글티셔츠, 구글볼펜, 참가 크리스탈, 구글큐브 등등~&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;그리고 온라인으로만 알던 분도 만나고, WimyBox 잘 쓰고 있으시다며&amp;nbsp;같이 사진찍자고 하신분도 계셔서 정말 즐거운 경험이었다. 특히 같은 전시장소에 계시던 분들과는 이런저런 얘기 나누면서 좀더 친해지는 계기도 되었던듯~&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;얼마전 포스팅에도 개인 프로젝트의 장점을 적었지만, 개인 프로젝트의 또하나의 기쁨을 느낄 수 있었던 것 같다. 다음에도 재미있는 개발자 대회가 있길~~~&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/o2xw_BtvpCY&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/EMBED&gt;&lt;/P&gt;
&lt;P&gt;&lt;/P&gt;
&lt;P style=&quot;TEXT-ALIGN: center; FLOAT: none; CLEAR: none&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile24.uf.tistory.com/image/0342CE4850AA343F20EB4F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;IMG_20121117_140407.jpg&quot; height=&quot;826&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P style=&quot;TEXT-ALIGN: center; FLOAT: none; CLEAR: none&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile5.uf.tistory.com/image/023E704850AA34402F49B5&quot; filemime=&quot;image/jpeg&quot; filename=&quot;IMG_20121118_141435.jpg&quot; height=&quot;1018&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P style=&quot;TEXT-ALIGN: center; FLOAT: none; CLEAR: none&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:465px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile24.uf.tistory.com/image/173E534850AA3441313D06&quot; filemime=&quot;image/jpeg&quot; filename=&quot;IMG_20121118_150538.jpg&quot; height=&quot;620&quot; width=&quot;465&quot;/&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;
&lt;P&gt;&lt;br /&gt;&lt;/P&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>ghackfair</category>
<category>Google</category>
<category>google korea</category>
<category>hackfair</category>
<category>html5</category>
<category>wimylime</category>
<category>youtube</category>
<category>구글</category>
<category>구글 핵페어</category>
<category>핵페어</category>
<author>zelon</author>
<guid>http://blog.wimy.com/401</guid>
<comments>http://blog.wimy.com/401#entry401comment</comments>
<pubDate>Mon, 19 Nov 2012 22:25:00 +0900</pubDate>
</item>
<item>
<title>프로그래머가 개인 프로젝트를 해야하는 5가지 이유</title>
<link>http://blog.wimy.com/400</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;평소에 늘 가지고 있던 생각이지만 트위터에 한번 올렸더니 다들 많이 공감해서 정리삼아 블로그에 포스팅~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:536px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile6.uf.tistory.com/image/134D5B3F505EC0651DBAA2&quot; filemime=&quot;image/jpeg&quot; filename=&quot;PersonalProject.png&quot; height=&quot;306&quot; width=&quot;536&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;나는 개인적으로 꽤 여러 개의 개인 프로젝트를 하고 있다. ZViewer(Win32 이미지 뷰어, C++), WimyBox(최신가요 듣기, JavaScript + Python), ZAssist(Visual Studio Addin, C#), ClipDic(Chrome 확장 사전, JavaScript) 정도가 그나마 내세울만한 것이고, 이외에도 작은 다양한 것들을 만들고 있다 -&amp;nbsp;&lt;a href=&quot;https://github.com/zelon&quot;&gt;https://github.com/zelon&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;물론 이 프로젝트들이 언제나 원활히 진행되는 것은 아니다. ZViewer 같은 것은 2004년부터 소스 관리를 시작했지만 중간에 1년 넘게&amp;nbsp;commit 이 없던 적도 있다. 언제나 내가 코딩을 하고 싶을 때만 작업을 시작한다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;언제 코딩을 하고 싶을까? 내 개인 프로젝트들은 대부분 내가 쓰는 프로그램이다. 프로젝트 시작도 대부분 내가 '이런 프로그램이 있었으면 좋은데 찾기가 힘드네' 혹은 '이렇게, 이 기술/언어 재미있겠는데 해볼까' 라는 생각에서 출발한다. 그래서 내가 원하는 기능이 구현될 때까지는 열혈 코딩을 한다. 그러다가 어느 정도까지 완성되면 그 때부터는 나의 욕구가 내 프로젝트의 스펙이 된다. 만약 내가 이런이런 기능이 있으면 좋겠는데 싶으면 그냥 구현하는 거다. 구현해보다가 힘들면 그냥 놓아두기도 한다. 혹시나 누군가가 나에게 '이런 기능 있으면 좋겠어요~' 라고 한다면 또 구현해본다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;반대로 내가 잘 쓰지 않게 되면 프로젝트의 진행이 멈추는 경우도 있다. ZViewer 같은 경우도, 얼마전에 노트북을 사면서 Windows 7 64bit 로 컴파일 시도도 해보고 했었고,&amp;nbsp;지금은 집에서 리눅스 데스크탑을 쓰고 있기 때문에 잘 안 쓰게 되었다. 그래서 프로젝트도 손 안대고 있고, 다만 어떻게 리눅스+윈도우 둘다 컴파일 되도록 해볼까 고려 중이다. wxwidget, qt 가 고려 중인데, 다른 우선순위에 밀려서 생각만 한번씩 해보는 중이다. 요렇게 64bit 로 프로젝트 운영도 해보고, 크로스 플랫폼 프로젝트 운영도 끄적여본다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;나의 상황은 이정도이고, 이제 이렇게 개인 프로젝트를 가지면 어떤 점이 좋은지를 한번 정리해 보자.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;1. &lt;b&gt;재미&lt;/b&gt;가 있다(!!!) 코딩하는 게 무슨 재미냐고 할 수 있지만, 누구나 한번쯤 수학 시간(아니 산수 시간에라도)에 느껴본 '문제를 푸는 재미' 가 있다. 내가 원하는 프로그램이 있는데 내가 만들었다. 나에게 주어진,&amp;nbsp;문제를 푸는 재미가 있다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;2. 나의 재미가 남에게 내세울 수 있는 &lt;b&gt;경력&lt;/b&gt;이 될 수도 있다. 개인적으로 부러운 사람 중의 한명인 빵집 개발자. '나 빵집 만든 사람이야' 이러면 컴퓨터 좀 한다는 사람들 중에 모르는 사람이 있을까? 물론 그만큼 시간과 노력이 필요하겠지만, 개인 프로젝트의 목표로 삼으면 좋을 것 같다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;3. &lt;b&gt;새로운 기술&lt;/b&gt;을 쉽게 익혀둘 수 있다. 막상 새로운 기술을 업무용 프로젝트에 갑자기 적용하려면 쉽지 않다. 누구나 겁도 나기 마련이다. 하지만 개인 프로젝트로 새로운 기술을 잠깐 맛만 보았더라도 좀 더 쉽게 적용할 수 있다. 한번이라도 Hello World 를 짜본 프로그램은 아무래도 쉽다. 개인 프로젝트니까 일단 저질러보자. 실행해보자. 내가 궁금해하는 기능이 잘 돌아가는지 해보자. 일단 해보면 남들이 좋다좋다 해도 단점도 눈에 띄일 것이다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;4. &lt;b&gt;공부&lt;/b&gt;하기 쉽다. 프로그래머는 늘 공부하는 직업이다. 책만 보고 '아! 이런 좋은 방법이 있네. 다음에 써먹어봐야지' 라고 하는 사람은 책을 잘 보는 사람이다. 하지만 정말 제대로 익히려면 직접 한번 써보는게 최고다. 어디에 써볼까? 개인 프로젝트에 써보면 된다. 리팩토링 책을 읽고나서 무슨 코드라도 리팩토링하고 싶은 열정이 솟아나는데 리팩토링할 코드가 없다면??? 다른 사람의 오픈소스를 뜯어고칠 것인가? 왜? 내 코드 고치는 게 더욱 재미있을건데? 내 코드 발전하는 거 정말 좋은데~! 남의 소스 리팩토링하려면 소스 이해부터 해야하는데, 내 소스는 이미 내가 알고 있으니 방금 배운 기법을 바로 적용해볼 수 있다. 잘못 고쳐도 남이 뭐라고 하지도 않는다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;5. 내 &lt;b&gt;실력 향상&lt;/b&gt;의 척도가 될 수 있다. 몇년 전의 자신의 코드를 보면 누구나 '내가 예전에 왜 저렇게 코딩을 했을까' 라는 생각을 할 것이다. 지금의 나는 그 때보다는 아무래도 발전했을 테니... 그런데 예전 소스가 하나도 없다면? 소스 컨트롤 시스템과 함께하는 개인 프로젝트라면 회사를 옮겨도(회사 코드는 퇴사하면 내 손을 떠나니...)&amp;nbsp;개인의 코딩 실력의 변천사를 잘 가지고 다닐 수 있다.&amp;nbsp;나는 어느만큼 발전하고 있나... 5년 전의 나를 만나서 대화해보자. '너는 왜 그랬니 -_-'&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&amp;nbsp;지금 바로 개인 프로젝트를 시작하자.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>Developer</category>
<category>personal project</category>
<category>PROJECT</category>
<category>개인 프로젝트</category>
<author>zelon</author>
<guid>http://blog.wimy.com/400</guid>
<comments>http://blog.wimy.com/400#entry400comment</comments>
<pubDate>Sun, 23 Sep 2012 17:12:06 +0900</pubDate>
</item>
<item>
<title>[책] 나무를 심은 사람</title>
<link>http://blog.wimy.com/399</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;나무를 심은 사람. 언젠가 나는 애니메이션으로 접한 내용이다. 꽤 어릴적에 봤었는데 그 내용이  아직 머릿속에 남아있다. 문득 생각나서 검색해보니 회사 도서관에 책으로 있어서 빌려봤다.&lt;div&gt;&lt;br /&gt;
 50페이지의 짧은 내용이고, 열심히 나무를 심은 사람에 대한 내용이다. 잠시 검색을 해보니,환경친화니 이런 얘기가 가장 많이 나오는데, 나에게는 꾸준한 노력이 얼마나 가치가 있는지를 알려주는 내용이었다. 지금의 나를 있게한, 지금도 가지고 있는 꾸준한 작은 발걸음. 언젠가는 좋은 결과를 가져올 것을 믿고 계속 나아가는 마음가짐. 이 책의 내용에서 배웠고 실천히려 노력하고 있다.&lt;br /&gt;
 다시 이 책을 읽으며 다시 한번더 마음가짐을 새롭게 다져본다. 지금 내가 꾸준히하고 있는 일들이 언젠가는......&lt;br /&gt;
&lt;br /&gt;
 이 책의 작가, 내용을 애니메이션으로 만든 분, 그리고 그 애니메이션을 어릴적의 나에게 접하게 해주신 분께 감사드린다.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;ps : 유투브에서 검색하면 애니메이션도 볼 수 있음~&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>일반</category>
<category>Book</category>
<category>책</category>
<author>zelon</author>
<guid>http://blog.wimy.com/399</guid>
<comments>http://blog.wimy.com/399#entry399comment</comments>
<pubDate>Sun, 23 Sep 2012 16:47:10 +0900</pubDate>
</item>
<item>
<title>git 이 어려운 이유</title>
<link>http://blog.wimy.com/397</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;git 이 어려운 이유는, 쉽게 설명해주지 않기 때문이다 -_-; 실제로 eclipse 같은 GUI 를 쓰면 거의 subversion 과 비슷하게 쓸 수 있는데, 자꾸 staging 이니, branch 만들어서 작업해야하니... 어렵게 접근한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;실제로 subversion 을 쓰던 사람들이 조금 생각해볼만한 건(당연히 제 기준!)&lt;/p&gt;&lt;ul style=&quot;list-style-type: square; &quot;&gt;&lt;li&gt;분산 서버라고 하지만, 로컬 서버에서 중앙 서버로 보내는게 push, 가져오는게 fetch. 이 과정이 하나 더 생겼다고 생각하면 됨&lt;/li&gt;&lt;li&gt;서버에 올리기 전에, 로컬 서버에 commit 이라는 것을 한 후에 로컬 서버에서 중앙 서버에 올리는 과정이 있다&lt;/li&gt;&lt;li&gt;로컬 서버에 commit 할 때, stage 라는 곳에 일종의 check 를 하고, check 한 것을 다시 commit 한다(이 과정을 한번에 할 수도 있다)&lt;/li&gt;&lt;li&gt;git 에서는 어떤 작업을 할 때 branch 를 하고, 새로만든 branch 에서 작업하고, 이것을 다시 main branch 에 merge 하는 스타일을 기본으로 하는데, 실제로 이렇게 할 필요는 없다. 그냥 subversion 처럼 trunk(main branch)에 commit 하면 된다.&amp;nbsp;제발 branch 를 꼭(!) 해야하는 것처럼 적지 말자 -_-&lt;/li&gt;&lt;li&gt;windows 에서 GUI 로 작업하려면 eclipse 에 git 플러그인을 깔면 쉽게 쓸 수 있음&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&amp;nbsp;내가 git 을 써보면서 왜 자꾸 어렵다고 할까 싶은건 위의 5개 정도. git 이 어렵다어렵다 하는데, 쉽게쉽게 설명해줘도 되는데, 장점을 부각시키기 위해&amp;nbsp;막강한 기능들을 위주로 설명을 해주니 light 유저들이 처음 시작하기 어렵다는 생각을 많이 하는 것 같다.(나도 그 피해자중 한명;;) 기본 기능 위주로 쓰면 subversion 에서 stage 와 로컬 서버가 있다는 것만 기억해두면 된다.&amp;nbsp;특히 branch &amp;amp; merge 가 막강하다고 자꾸 branch 후 작업한다고 하는데, 실제로 기존의 소스 관리툴을 쓰면서 branch 를 하는건 일반 개발자가 아니라, 팀장급에서 하기 때문에 더 힘들어하는 것 같다. 그리고 수많은 git 설명 문서들이 대부분 콘솔 환경이다..... 프로그래머들도 콘솔만 쓰는건 어렵고, 귀찮지 않나요? -_-&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;간단 정리. branch 꼭 안해도 되요! commit 할 때 중간에 stage 라는 임시 공간있어요~ 중앙 서버에 올리는건 push &amp;nbsp;받아오는건 fetch 에요~ eclipse git 플러그인 좋아요!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;실제로 한번 해보면 어렵지 않아요~ 막강한 기능은 나중에 익혀도 되요(저도 잘 몰라요~) ^^/&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ps: 앞에도 적었지만, (저같은)프로그래머는 귀찮은거 싫어하기 때문에, git 관련해서 쉬운 GUI 사용법은.... 잉여력이 폭발할 때 적어볼까 생각 중 ㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>easy</category>
<category>GIT</category>
<category>Subversion</category>
<category>svn</category>
<category>깃</category>
<author>zelon</author>
<guid>http://blog.wimy.com/397</guid>
<comments>http://blog.wimy.com/397#entry397comment</comments>
<pubDate>Mon, 25 Jun 2012 00:55:59 +0900</pubDate>
</item>
<item>
<title>디아블로3 뜯어보니 짝퉁샤넬백</title>
<link>http://blog.wimy.com/396</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;나는 한 때 친구들과 열광적으로 디아블로2 를 게임방에서 거의 매일 밤을 새면서 즐겼던 유저이다. 그런데 나이가 좀 들어서인지(딸이 태어난지 6개월 밖에 안되어서인지) 디아블로3 는 그 때 함께 즐겼던 친구들에 비해서 늦게(3주 늦게) 시작했다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그런데... 서버가 제정신이 아니다 -_-; 이거 뭐 제대로 해봐야지 하고 맘먹었을 때 3번 중의 2번은 서버 점검 중... 근데 5만 5천원이 아까워서라도 얼른 서버가 제정신을 차리길 기다리고 있다. 최근에 5만 5천원 정도의 거금(!)을 들여서 산 게임은 '스타크래프트2' 정도였다. 그러고보니 둘다 블리자드 게임이네;; 블리자드라는 이름이, 디아블로라는 이름이 이렇게나 큰 위력을 가지고 있다니... 그런데,&amp;nbsp;아마 서버가 어느 순간 잠깐 정신이 돌아왔을 때 디아블로 한번 잡고, 한동안은 디아블로 접속을 안하게 될 것 같다. 마치 요근래 스타크래프트2를 한적이 없는 것처럼...&lt;/p&gt;&lt;p&gt;&amp;nbsp;게임 서버 프로그래머라는 직업을 가지고 있는 나로써는 이거참... 내가 저렇게 서비스되는 게임의 개발자라면 얼마나 욕을 먹었을까(아마 지금 블리자드의 어느 분께서도 욕먹고는 있겠지;;;) 어느분의 말처럼 직접가서 디버깅이라도 해주고 싶다. 여태까지 몇번의 서버 점검... 그 와중에 원인을 제대로 못 찾았다는 것이니... 블리자드의 기술력에 대해서 의심이 갈 수 밖에 없다. 항간에 떠도는 서버의 문제점을 추측한 것은 모르겠고, 왜 와우의 기술이나 이전의 다른 서비스들에서 얻은 노하우들이 제대로 전해지지 않은 것인지도 의문이다. 블리자드에서 공식적인 해명과 사과가 있어야할 정도이지 않나? 요즘 서버 시장에서는 어느 정도의 서버 중지 시간이 있으면 '이런저런 기술적인 문제가 있었으며, 요렇게저렇게해서 사고를 방지하겠으며, 정말 미안하다' 이런 내용이 많이 올라오고 기술자들의 귀감도 되고, 사용자들의 공감도 얻는데, 블리자드는 무슨 생각인지...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;디아블로3에 열광하는 남자들을 이해 못하는 여자들에게 '12년만에 발매된 샤넬백이라는 말' 이 있었는데, 이건 마치 '12년 만에 발매된 샤넬백이 뜯어보니 샤넬짝퉁백이었다' 인 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;다만, 서버는 완전 짝퉁이지만, 게임 자체 컨텐츠는 꽤 훌륭하므로, '샤넬 마크는 진퉁인 짝퉁' 이랄까? -_-;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>게임</category>
<category>Blizzard</category>
<category>Diablo3</category>
<category>게임</category>
<category>내돈</category>
<category>디아3</category>
<category>디아블로3</category>
<category>블리자드</category>
<category>서버</category>
<author>zelon</author>
<guid>http://blog.wimy.com/396</guid>
<comments>http://blog.wimy.com/396#entry396comment</comments>
<pubDate>Mon, 11 Jun 2012 00:16:44 +0900</pubDate>
</item>
<item>
<title>2000년도에 플래시로 만들었던 학과 소개</title>
<link>http://blog.wimy.com/395</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;2000년도에 나는 '미티어 - Meteor' 라는 동아리에서 열심히 활동하고 있었다. 이 때 동아리에 들어온 일감 중에 하나가 플래시로 각과 소개를 만들어달라는 것이었는데, 나는 '화학과', '컴퓨터과학과 - 우리 학과!!!' 를 맡았다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;당연히 디자인 실력은 없었지만 어떻게든 아이디어를 짜내서 연출로 승부했었던 것 같다 ㅋㅋㅋ 이사짐 정리를 하다가 발견되어서 올려본다. 원본 시디(모든 학과가 다 있는 것)를 가지고 있는데, 내 것만 올린다. 혹시나 같이 작업했던 사람은 연락주면 원본 시디를 날려주겠음~ :) 안타깝게도 fla 파일이 아니라 swf 만 있음 ㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;아래 플래시가 안 보이시면 F5 - Refresh 를 시도~ ^^&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;- 계속 자동 플레이 되어서 임시로 제거 ㅠㅜ -&lt;/p&gt;&lt;p&gt;컴퓨터 과학과&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;화학과&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;다시봐도... 우리과인 컴퓨터과학과보다 화학과를 더 잘했는듯 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>일반</category>
<category>flash</category>
<category>Meteor</category>
<category>swf</category>
<category>경북대학교</category>
<category>미티어</category>
<category>컴퓨터과학과</category>
<category>플래쉬</category>
<category>플래시</category>
<category>학과소개</category>
<category>화학과</category>
<author>zelon</author>
<guid>http://blog.wimy.com/395</guid>
<comments>http://blog.wimy.com/395#entry395comment</comments>
<pubDate>Sat, 19 May 2012 19:53:24 +0900</pubDate>
</item>
<item>
<title>Google App Engine 으로 개발하기</title>
<link>http://blog.wimy.com/394</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;얼마전 DevFestXKorea 의 smalltalk 시간에 appengine 관련 모임에 참여하면서 사람들이 궁금해하는 몇가지를 정리해보려고 합니다. 참고로 저는 취미로 WimyBox(&lt;a href=&quot;http://box.wimy.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://box.wimy.com/&lt;/a&gt;)를&amp;nbsp;Google App Engine(GAE) 으로 개발하고 있으며,&amp;nbsp;하루에 약 900명 정도의 인원이 방문하고 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&amp;nbsp;- 왜 Google App Engine(GAE) 을 사용했나요?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;무료라서 입니다;;; 아마 취미로 개발하신 분들은 대부분 비슷할 것 같은데, 어느 정도의 서비스까지는 무료로 제공됩니다. 그리고 무료로 서비스를 구축해 놓고, 서비스가 잘되겠다 싶으면, 클릭 몇 번해서 최대 부하량을 늘리면서 정식 서비스를 하면 됩니다. 정식 서비스라 함은, 서버 사용량이 많아짐(광고를 하든지, 널리 알리면 사용자가 늘겠죠?)을 뜻합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&lt;b&gt;&amp;nbsp;- 얼만큼의 무료 서비스 인가 - free quota&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;무료로 제공되는 서비스의 종류는 다양한데, 이를테면, 서버 CPU 는 28시간이 제공됩니다. 하루에 약 28시간의 CPU 시간이 제공되는거죠. 하루는 24시간인데, 어떻게 28시간을 다 쓰냐하면, 서비스에 부하가 걸리면 instance 가 2개로 늘어납니다. 그러면 그 때부터 시간은 x2 배로 가는거죠;; 물론 무조건 1개의 instance 만 동작하도록 설정할 수도 있습니다. 혹은&amp;nbsp;좀더 빠른 CPU 로 세팅을 바꾸면 1개의 instance 가 x3 으로 시간을 잡아먹는등(서비스 반응 속도는 빨라지겠죠), 세팅에 따라서 조금 다릅니다. 무료 DB 저장은 하루에 1기가를 제공해줍니다. Outgoing Bandwidth(내려받기 대역폭)은 하루에 1기가를 제공해줍니다. 메일 발송은 하루에 100개가 무료입니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;이런식으로 무료 용량이 제공됩니다. 그러므로 어떤 종류의 서비스를 기획하느냐에 따라서 무료로 사용가능할 지가 결정됩니다. Database 에 하루에 1기가 이상을 저장하는 [ 이미지 저장 및 열람 ] 서비스는 이미지를 작게해서 저장하는 종류가 아니라면 좀 힘들 수도 있겠죠. 어떤 메일링 리스트 처럼 동작하는 서비스는 아마 시작도 힘들거 같습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;WimyBox 의 경우 database 를 거의 쓰지 않고, 최신 곡 목록을 가져오는 부분만 한시간에 한번씩 urlfetch(다른 웹사이트의 페이지를 가져오는 함수)&amp;nbsp;를 통해서 가져오고 있습니다. urlfetch 는 하루에 657,084 번 실행할 수 있으며, 하루에 4기가의 데이터를 사용할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;간단히 말씀드려서, 개발 테스트 용도로 하기에는 부족함은 없습니다. 아래의 free quota 관련 이미지를 참고하세요~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile9.uf.tistory.com/image/177EB23D4FB3417E25F0DE&quot; filemime=&quot;image/jpeg&quot; filename=&quot;freequota.png&quot; height=&quot;1473&quot; style=&quot;&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&amp;nbsp;- 어떻게 서비스를 구성하는 게 좋을까&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;WimyBox 의 경우 사용자가 늘어나면 urlfetch 를 많이 사용했었는데,&amp;nbsp;한 시간에 한번만 urlfetch 를 사용하고 결과를 저장해두고, 한시간 안에는 캐시를 통해서 동작하도록 수정하여 urlfetch 횟수를 많이 줄였습니다. 그리고 urlfetch 자체가 CPU 시간도 많이 사용하므로 CPU 시간도 줄일 수 있습니다. 최근에는 html5 의 appcache 를 이용하여, html/css/js 파일을 한번이라도 새로운 버젼을 다운받았으면 다시 다운 받지 않도록 하여 조금이나마 사용량을 줄였습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;만약 image 저장을 하려면 용량을 좀 줄여서 저장한다던지, 가능하면 image 의 url 만 저장한다던지 등을 하면 좋을 것 같습니다. 혹은 다른 무료&amp;nbsp;image storage(flickr 나 google picasa 등)에 저장하는 것도 한 방법이 될 수 있습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;이런식으로 최대한 어떤 자원(CPU, 용량제한 등)의 사용을 최대한 줄여두면 좋습니다. 주기적으로 Dash board 를 확인하여 어떤 자원을 많이 쓰는지를 확인하여, 어떻게 해당 부분의 부하를 줄일 수 있을지 고민해보는게 좋을것 같습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그리고 무료 용량 제한에 걸리면, 여러 무료 서비스(한 계정당 11개의 서비스를 만들 수 있음)를 만들거나, 다른 계정을 만들어서 부하를 분산시키는 것도 고려할 수 있습니다. 다만, 관리가 좀 더 힘들어지겠죠;;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&amp;nbsp;- 어떤 개발 환경인가&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;OS 로는 windows/linux/mac 을 지원합니다. 개발 언어로는 java/python/go(beta) 를 지원합니다. 저는 linux-python 조합으로 사용 중이긴 합니다. Java 의 경우 GWT(Google Web Toolkit)라는 것을 통해 좀 더 쉬운 web UI 를 제공해주시도 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;- 그 외&lt;/p&gt;&lt;p&gt;&amp;nbsp;아마존의 AWS(Amazon Web Service)는 아직 제가 사용해보지를 않아서 정확한 비교는 할 수 없지만, 일단 일년의 무료 사용은 가능하다고 합니다만 저는 취미 개발을 일년만 할 것이 아니라서 App Engine 을 사용합니다;;&lt;/p&gt;&lt;p&gt;&amp;nbsp;image, css, javascript, html 등의 static 파일은 CPU 를 소비하지 않고, Outgoing bandwidth 만 소모합니다(image 만 따로 서비스하는 서비스를 구성해본 결과) 다만 조금 큰 이미지라면 google sites 에 올려놓고 서비스하는 게 좋을 것 같습니다.(조금이라도 서비스 자원을 아끼기 위해)&lt;/p&gt;&lt;p&gt;&amp;nbsp;Database 를 사용하려면 &amp;nbsp;일반 db 보다, ndb 를 사용하세요. 새로운 db 니까;;&lt;/p&gt;&lt;p&gt;&amp;nbsp;국내향 서비스의 경우 GAE 가 AWS 보다 반응속도가 느린 감이 있다고 합니다. 구글에서 데이터센터를 한국에 두지 않는 이상 이 부분은 어쩔 수 없을 것 같습니다. 그런데, 숫자로 보는게 아니라 체감을 해보면, box.wimy.com 도 느리다는 생각은 들지 않습니다. 이 부분은 사실 주관적으로 다르기도 하니;; 지금 체크해보니, 47kb 짜리 이미지 로딩하는데, 302ms(0.3초) 걸리네요.&lt;/p&gt;&lt;p&gt;&amp;nbsp; 한국 App Engine 관련 페이스북 그룹 -&amp;nbsp;&lt;a href=&quot;https://www.facebook.com/groups/GAEKorea/&quot;&gt;https://www.facebook.com/groups/GAEKorea/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<author>zelon</author>
<guid>http://blog.wimy.com/394</guid>
<comments>http://blog.wimy.com/394#entry394comment</comments>
<pubDate>Mon, 14 May 2012 02:07:03 +0900</pubDate>
</item>
<item>
<title>크롬 확장 프로그램 만들기 슬라이드와 devfestXKorea 후기</title>
<link>http://blog.wimy.com/393</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile7.uf.tistory.com/image/193463364FB8CC2B321D85&quot; filemime=&quot;image/jpeg&quot; filename=&quot;AsqxPBkCIAA9NY3.jpg&quot; height=&quot;465&quot; style=&quot;&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;출처 : @FlaShilver 님 트윗 -&amp;nbsp;&lt;a href=&quot;https://twitter.com/#!/FlaShilver/status/201168005038743552/photo/1&quot;&gt;https://twitter.com/#!/FlaShilver/status/201168005038743552/photo/1&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;2012년 5월 12일 DevFestXKorea 라는 개발자 모임에서 발표를 하였습니다. 구글 코리아에서 후원을 하고, 여러 구글 기술 관련 그룹에서 주최를 하여, '구글 기술을 사용하는 개발자 모임' 정도 되겠습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;여기서 얼마전에 만들어서 공개했던 ClipDic 내용을 가지고, &lt;b&gt;'ClipDic 개발 사례로 보는 크롬 확장 프로그램 개발'&lt;/b&gt; 이라는 제목으로 발표를 했습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;a href=&quot;https://docs.google.com/presentation/d/1e7F8lWyYH6aTNpnrl63_R3OlnjOWWYISr0kOPKBc-Xg/edit&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;[ 발표 자료 링크 - 구글 문서 링크 ]&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;크롬 확장 프로그램의 Hello World 로 시작해서, 어떤 과정과 API 들을 사용해서 만들었나, 그리고 배포/업데이트를 소개합니다. 발표 중에도 계속 말했지만, '정말 쉽고, 재미있습니다' 한번씩 해보시면 공감하실 겁니다~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;DevFestXKorea 는 원래 구글의 기술에 관심이 많은 저였지만, 그동안 개발자 모임에는 한번도 참석해본 적이 없는데, 이렇게 발표를 하게 된 이유는... 꼭 참석하고 싶었기 때문입니다 ㅋ 원래 꼭 참석하고 싶다는 생각만 하고 있었는데, 일반 참석자로 신청하면, 선별을 한다고 하더라구요;;; 근데 발표자로 신청을 하면 발표자 선정이 안되어도 100% 참석자로 해준다고 해서, 발표자로 신청했습니다 ㅎㅎ 다행히 발표할 꺼리(ClipDic)도 있고해서 발표 신청을 했습니다. 크롬 확장 프로그램 소개 정도로 시작했기 때문에 스크린샷 위주로 쉽게 발표를 해서, '아~ 꽤 쉽구나' 라는 내용은 제법 전달된 것 같습니다. 아마 '뭐 저런걸로 발표를 했나...' 라고 하실지도 ㅠㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;DevFestXKorea 에 가기 위해 경북 구미에서 새벽 3시에 일어나서(ㅠㅜ) 열심히 서울로 올라갔습니다. 플래툰 쿤스트할레라는 멋진 모임 자리에 10시 40분쯤 도착했는데... 역시나 처음 간 개발자 대회... 어색했습니다 ㅋ 등록하고 이름표 목에 걸고, 들어갔는데 좀 뻘쭘했습니다. ㅋ 그나마 많은 사람들이 모여있는 곳 근처(;;)에 앉아서 이런 저런 대화를 잠시 듣다가 제 소개를 할 때쯤 장내 정리가 되면서 키노트 준비;;; (아 나도 대화에 끼고 싶었는데;;) 그렇게 시작했는데, 음료수를 하나 마시러 (무료)Bar 에 갔더니 거기에 제가 아는 친구가 Staff 로 있는게 아니겠습니다. 둘다 서로 깜짝 놀라서 얘기 좀 하다가, 온라인에서만 알고 지내면서 꼭 한번 만나고 싶던 한정일님도 만나고... 그렇게 어색했던 모임이 조금씩 덜 어색해지기 시작했습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;'개발자에게 희망을~' 이라는 메시지의 권순선님의 키노트 후 점심을 먹으며, 저에게 말을 걸어주신(!) 다른 분과 샌드위치 먹으며 얘기 좀 하다, 발표 준비를 위해 3층으로 올라갔습니다. 약간의 문제가 있었지만, 다행히 제가 가져간 노트북으로 발표를 하게 되었습니다. 제가 2번째 발표여서 1번째 발표를 들으면서 그나마 여유가 있어서 제 발표 준비는 잘되었습니다. 참고로 발표자 컴퓨터가 크롬북이었는데 프리젠터랑 미러링이 안되어서, 맥북으로 교체했는데 제가 잘 못써서 그냥 제 노트북으로 발표;; 크롬북을 처음만져봐서(20초쯤?) 감동이었는데, 서울에서는 정말 맥북을 많이 쓰는거 같아서 또다른 세상이었습니다(저도 마음만은 특별시!! 인데 말이죠 ㅋ)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;첫번째 발표는 크롬 개발자 도구의 고급 사용법이었는데, 정말 관심도 있었고, 저에게 딱 필요한 내용들이었습니다. 아무래도 저도 취미 프로젝트에 웹 기술 관련이 많으니 많은 도움이 되었습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;두번째는 제 발표였고;;&lt;/p&gt;&lt;p&gt;&amp;nbsp;세번째는 GWT 와 앱 엔진. GWT 는 안 쓰고 있는데, 그래도 앱 엔진 관련 내용이라 재미있게 들었습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;네번째는 Hello Dart. 전에 동영상 한번 정도 본 것이었는데, 꽤 흥미롭게 소개를 잘 해주셨습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;다섯번째는 Dart 를 활용한 Presentation tool 소개. 얼마나 간단하게 내용을 채울 수 있는 툴인지는 모르겠지만, 짧은 시간에 정말 간결하게 소개해주셨습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;여섯번째는 Google App Engine 활용기. 저랑 비슷한 게임업계에 계시고, App Engine + Python 으로 개발하셨는데, 제가 개발중인 WimyBox(&lt;a href=&quot;http://box.wimy.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://box.wimy.com/&lt;/a&gt;)와 거의 비슷한 기술 체계여서 정말 흥미로웠습니다. 저와 같은 환경에 저와 같은 취미 프로젝트. 그리고 &amp;nbsp;제가 특히 공감갔던, 해결방법들(referer 수정 같은 코드)을&amp;nbsp;보니 저와 비슷하게 여러 관문들을 여러개 통과하셨다는 느낌이 많이 들었습니다. 그리고 유쾌한 발표와 진행이 저의 마음을 많이 끌었습니다. 나중에 발표자인 '나자영' 님과 많은 얘기를 나눴는데 공감대가 많은 만큼 재미있는 얘기 많이 나눌 수 있었습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;일곱번째는 Google Apps Script 활용. Apps script 는 저의 딸 '나윤이' 의 이름을 지을 때 사용하고, wimy.com 도메인의 관리 때문에 몇년간 사용 중이어서, 역시 흥미롭게 들었습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;마지막 여덟번째는 Google App Engine 의 발전 방향과 이를 응용한 소프트웨어 개발. Google App Engine 으로 스타트업을 하고 계셨던 분의 발표였는데, 정말 '전문가'의 내용으로 발표해주셨습니다. 많은 얘기를 나눠보고 싶었는데, 아이가 아파서 급하게 가셨다는 ㅠㅜ 너무 아쉬웠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;DevFestXKorea 에는 총 3개의 트랙(Web &amp;amp; Cloud, Mobile, Emerging)이 있었는데 저는 계속 Web &amp;amp; Cloud 만 들었습니다. 다른 트랙들도 관심이 있었는데, 이제 하나씩 살펴볼 예정~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;모든 발표가 끝나고 특정 주제에 관심있는 사람들끼리 smalltalk 를 했는데 저는 제 발표 주제인 크롬을 버리고;; App Engine 으로 가서 재미있는 얘기를 많이 나눴습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;사실 개발자 모임에 처음가면서 조금 막연한 기대를 가지고 있었는데, 좋은 발표를 듣고, 즐거운 분들과 만나고, 개발자로써의 자극을 제대로 얻어서 갑니다. 그리고 뒤풀이 시간에서의 많은 즐거운 대화, 공감대. 정말 멋진 경험이었습니다. 그리고 건배 제의를 'Hello~ World~' 로 하는 진짜 개발자 분위기가 너무 마음에 들었습니다. 그리고 저도 어느새 개발 10년차가 되는데, 우리의 미래, 희망인 젊은 개발자분들과 함께 얘기할 시간이 있어서(많이는 못했지만;;) 즐거웠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;발표 자료를 트위터와 구글 플러스에 공유하고, 리트윗을 받고, 팔로워가 늘고, 제 슬라이드를 많은 사람들이 보고 있고(지금도 4분이나 보고 계시네요), 아무도 관심이 없던 clipdic 을 벌써 fork 하신 분도 있고, 마치 개발자 세상에 데뷔를 한 기분입니다. ZViewer(http://zviewer.wimy.com/)는 소스 공개를 한지 7년쯤 될 동안 딱 2번 패치를 받았는데;; 여튼 정말 좋은 경험을 해봅니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;행사 준비해주신 많은 분들께 감사드리며, 행사에 와서 함께 즐겨주신 많은 분들께도 감사를 드립니다. 앞으로도 즐거운 모임에서 많이 만났으면 합니다~~~ 개발자 여러분들 화이팅입니다~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile2.uf.tistory.com/image/143EDF364FB8CC7021034B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;blog5.jpg&quot; height=&quot;620&quot; style=&quot;&quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;출처 : 이원제님 구글 플러스 -&amp;nbsp;&lt;a href=&quot;https://plus.google.com/107621265594457706915/posts/VsvLVVgLGKG&quot;&gt;https://plus.google.com/107621265594457706915/posts/VsvLVVgLGKG&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>IT</category>
<category>AppEngine</category>
<category>chrome</category>
<category>chrome extension</category>
<category>clipdic</category>
<category>devfestxkorea</category>
<category>dfxkorea</category>
<category>gdg</category>
<category>Google</category>
<category>gtug</category>
<category>개발자모임</category>
<category>구글</category>
<category>크롬</category>
<category>크롬 확장</category>
<author>zelon</author>
<guid>http://blog.wimy.com/393</guid>
<comments>http://blog.wimy.com/393#entry393comment</comments>
<pubDate>Mon, 14 May 2012 01:40:32 +0900</pubDate>
</item>
<item>
<title>김프(gimp)에서 Round Corner Filter 를 사용할 수 없을 때</title>
<link>http://blog.wimy.com/392</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;김프에서도 포토샵과 마찬가지로 다양한 필터를 제공하는데, 그 중에 Round Corner 는 다음과 같은 효과를 주어서 스크린샷 등을 첨부하거나 할 때 꽤 멋진 효과를 줄 수가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:158px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile23.uf.tistory.com/image/174A564C4FAA30B41798BB&quot; filemime=&quot;image/jpeg&quot; filename=&quot;original.png&quot; height=&quot;114&quot; style=&quot;&quot; width=&quot;158&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;위의 이미지를 아래의 Round Corner 를 적용하면,&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:492px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile25.uf.tistory.com/image/181CE1444FAA345C35BB12&quot; filemime=&quot;image/jpeg&quot; filename=&quot;roundcorner.png&quot; height=&quot;565&quot; style=&quot;&quot; width=&quot;492&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;아래의 이미지가 된다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:188px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile22.uf.tistory.com/image/1736C2394FAA30C6268B87&quot; filemime=&quot;image/jpeg&quot; filename=&quot;roundcorner.png&quot; height=&quot;144&quot; width=&quot;188&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;그런데&amp;nbsp;김프를 사용하다보면, 필터 -&amp;gt; 장식 -&amp;gt; Round Corner 가 비활성화(disabled)되어 사용할 수 없는 경우가 있다. 특정 필터들은 특정 조건이 만족되어야만 사용할 수 있는데, Round Corner 의 경우 알파 채널(Alpha Channel)이 존재하면 사용할 수가 없다. 그러므로 Round Corner 를 사용하려면 알파 채널을 제거해줘야 한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;알파 채널을 제거하려면, 레이어(Layer) -&amp;gt; 투명도(Transparency) -&amp;gt; 알파 채널 제거하기(Remove Alpha Channel) 를 하면 된다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:596px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile22.uf.tistory.com/image/144FB2404FAA35F42921BE&quot; filemime=&quot;image/jpeg&quot; filename=&quot;remove_alpha_channel.png&quot; height=&quot;495&quot; style=&quot;&quot; width=&quot;596&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ps : 이 블로그가 김프 관련 블로그는 아니지만, round corner 를 사용하여 작업 중 이상하게 동작하지 않을때가 있어서 검색해봐도 내가 원하는 답이 없었는데, 다행히 알파 채널이 문제란 걸 알아내서&amp;nbsp;올려봄~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>오픈소스</category>
<category>alpha channel</category>
<category>gimp</category>
<category>round corner</category>
<category>김프</category>
<category>둥근 모서리</category>
<category>알파 채널</category>
<author>zelon</author>
<guid>http://blog.wimy.com/392</guid>
<comments>http://blog.wimy.com/392#entry392comment</comments>
<pubDate>Wed, 09 May 2012 18:16:51 +0900</pubDate>
</item>
<item>
<title>ZViewer 0.8.0 배포합니다</title>
<link>http://blog.wimy.com/391</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&amp;nbsp;정말 2년 9개월 만에 새로운 버젼을 배포합니다. 감회가 새롭네요. 역시 본인이 프로그램을 써야(!!) 계속 발전이 되어갑니다. 그리고 시간이 있어야 ㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;자세한 내용은 &lt;a href=&quot;http://zviewer.wimy.com/9&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;[ 링크 ]&lt;/a&gt; 를 따라가세요~&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>zviewer</category>
<category>zviewer</category>
<category>zviewer 0.8.0</category>
<author>zelon</author>
<guid>http://blog.wimy.com/391</guid>
<comments>http://blog.wimy.com/391#entry391comment</comments>
<pubDate>Sun, 29 Apr 2012 23:08:05 +0900</pubDate>
</item>
<item>
<title>우분투 리눅스 11.10 에서 12.04 로 업그레이드 후기 - ubuntu upgrading from 11.10 to 12.04</title>
<link>http://blog.wimy.com/390</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;어제 저녁에 우분투 11.10 에서 12.04 로 업그레이드를 했다. 업그레이드에 대한 후기를 적어본다. 실시간으로 google plus 에 올렸던 것을 정리도 할겸~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; &quot;&gt;업그레이드 환경&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;OS : 64bit ubuntu 11.10 커스터마이징 거의 안한 상태&lt;/p&gt;&lt;p&gt;RAM : 12GB&lt;/p&gt;&lt;p&gt;CPU : i7 2.8GHz&lt;/p&gt;&lt;p&gt;GPU : GeForce GTS 250&lt;/p&gt;&lt;p&gt;APT Repository : daum&lt;/p&gt;&lt;p&gt;LAN : 평균 1메가/초 속도&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;위와 같은 환경에서 업그레이드 시작. 업그레이드 시작 전에 11.10 에서의 최신 업데이트는 다 한 상태.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; &quot;&gt;업그레이드 과정&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;업그레이드를 시작하면 새로운 패키지를 다운받는데, 약 30분 정도 걸렸음.&lt;/p&gt;&lt;p&gt;새로운 패키지를 설치하는데, 설치 시작 부분 - libc-bin 패키지에서 설치 과정이 멈췄음. 그래서 혹시나하고 아래 사진의 빨간 네모 부분을 클릭해서 보니, 'libc 를 업그레이드 하기 위해서는 특정 서비스들을 재시작해야한다. 확인하세요' 이런 내용을 띄우고 멈춰있었음. 그래서 터미널을 클릭하고, tab -&amp;gt; enter 눌러서 계속 진행시킴(아래 사진은 그 부분은 넘어간 터미널 화면). 이거 안 눌러봤으면 업그레이드 프로그램이 뻗었는 줄 알았을 듯;;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:620px;text-align: center; ;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile21.uf.tistory.com/image/1345D6384F9D167405D5CB&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ubuntu_upgrading.png&quot; height=&quot;666&quot; style=&quot;text-align: center; &quot; width=&quot;620&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;여튼 설치 시에는 꼭 터미널 열어놓고 진행 강추~!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;업그레이드 과정 중에 꽤 많은 32bit 전용 라이브러리 들이 제거됨을 알려줌. 아마 64bit 전용으로 대체되는 것 같은데, 이것 때문인지 체감 속도가 좀 빨라졌음.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;패키지 업그레이드 과정은 약 30분 만에 종료. 총 설치 시간은 넉넉잡아 1시간 30분 정도 걸린듯.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;업그레이드 후 재부팅. 부팅은 잘됨. 다만 부팅 후 잘 사용 중이던 무선 마우스가 인식이 안되어서, USB 리시버를 뺐다가 다시 연결하니 잘 동작함.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; &quot;&gt;12.04 기본 사용 소감&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;'체감할 수 있을 정도로 속도가 빨라짐' 노틸러스(파일 탐색기) 창을 잡고 이리저리 흔들었을 때 11.10 보다 확실히 반응이 빠름&lt;/p&gt;&lt;p&gt;이전 버젼의 한글 번역 '깔기' 가 '설치' 로 돌아와서 (개인적으로 매우) 좋음&lt;/p&gt;&lt;p&gt;기본 글꼴이 '나눔고딕' 이 되어서 인지, 전반적으로 한글이 깔끔해짐(네이버 매우 감사~)&lt;/p&gt;&lt;p&gt;11.10 에서의 ibus 버그 때문에한글IME 로 나비를 쓰고 있었는데 다시 ibus 로 돌아와서, 시작시 '한글 패널' 이 없어서 좋음&lt;/p&gt;&lt;p&gt;MyUnity 프로그램에서 이것저것 unity 설정할 수 있어서 좋음(마운트된 드라이버를 unity 에 안 보이게 해줘서 좋음)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; &quot;&gt;결론&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;총 설치 약 1시간 30분 정도 걸림&lt;/p&gt;&lt;p&gt;&amp;nbsp;전반적으로 속도 향상이 있음&lt;/p&gt;&lt;p&gt;&amp;nbsp;업그레이드는 꽤 잘됨&lt;/p&gt;&lt;p&gt;&amp;nbsp;11.10 이라면 12.04 로 무조건 추천하고 싶을 정도(사실 안할 이유가 없잖아!! LTS 이기도 하고 ㅋㅋ)&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>오픈소스</category>
<category>11.10</category>
<category>12.04</category>
<category>LTS</category>
<category>ubuntu</category>
<category>Upgrade</category>
<category>업그레이드</category>
<category>우분투</category>
<author>zelon</author>
<guid>http://blog.wimy.com/390</guid>
<comments>http://blog.wimy.com/390#entry390comment</comments>
<pubDate>Sun, 29 Apr 2012 19:33:13 +0900</pubDate>
</item>
<item>
<title>구글 코드잼 2012 round 1A Password 후기 및 문제 풀이</title>
<link>http://blog.wimy.com/389</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;2012 google codejam round 1A :&amp;nbsp;&lt;a href=&quot;http://code.google.com/codejam/contest/1645485/dashboard&quot;&gt;http://code.google.com/codejam/contest/1645485/dashboard&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;&lt;b&gt;대회 후기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;오전 8시 30분에 시작인 줄 알고 8시에 겨우 일어났는데 10시부터 시작이었다 -_-;;; 뭐 여튼 잠도 좀 깨고, 새로나온 구글 드라이브 구경 좀 하다가(WeVideo 라는 app 이 참 좋더라 -0-) 10시부터 시작했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;역시나 문제의 정확한 해석이 힘들었다. 여태까지 영어를 대략적인 의미로만 파악하다가 조동사 하나 하나가 중요한 &lt;b&gt;'문제'&lt;/b&gt;를 풀려니 ㅠㅜ 1번 문제의 의미를 파악하고 나니 30분이 지났다. 나중에 확인해보니 round 1A 1등한 사람은 2번 large 문제까지 다 푼 시간... 난 무엇을 하고 있는것인가 ㅠㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;round 1 은 A,B,C 3개 각 round 의 1000등까지를 round 2 로 보내준다. 난 1번 small 문제 겨우 풀고(문제 해석에 30분, 문제 풀이에 1시간 30분이 걸림 ㅠㅜ)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;20점(1번 small, large 둘다 풀면)이면 3000등 안에 드는데, 난 10점. 뒤에서 100등&amp;nbsp;ㅠㅜ. large 문제는 맞췄다고 생각했는데 2가지의 실수를 했다. 소수점 계산을 하는데 float 을 쓴 거랑 재귀함수(recursive function)로 문제를 풀었다는 것.&amp;nbsp;소수점 나오면 무조건 double 을 써야하고,&amp;nbsp;재귀함수는 for loop 과 배열로 계산했었어야 했다. 다음번에는 실수하지 말자 ㅠㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;일단 추후의 대회나, 처음 (취미로)&amp;nbsp;코드잼을 시작하는 사람을 위해 구글 문서(https://docs.google.com/document/d/1gfJrZdn_dOxwL3cyfYw7iqezsuyI89SnB0yY-pxNoZU/edit) 하나 만들어 둔다. 계속 정리하고, 보완할 예정~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; &quot;&gt;문제 내용&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;2012년 Google Codejam round 1 A - Password problem&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;(의역을 좀 함)키보드를 안보고 암호를 입력하는데, 특정 키를 제대로 잘 누를 확률이 주어진다. 그리고 암호를 입력 도중 어느 순간 이후로는 키보드를 보면서 제대로(!) 입력을 했을 때, 최소 몇번을 눌러야 암호를 제대로 입력할 수 있을까의 문제이다.&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;좀 더 풀어보면, 현재까지 입력한 암호의 자리수와 전체 암호의 자리수, 그리고 각 자리의 키를 잘 입력할 확률이 주어졌을 때, 가장 작은&amp;nbsp;expected 값을 구하는 것이다. expected 값은 특정 상황에서 몇번 더 키를 입력해야하는지에 대한 값이며, 다음과 같이 구할 수 있다. 단, 현재 상황에서 '백스페이스키로 한자리를 지우거나', '엔터키로 현재 입력을 그냥 넣어서 틀리고 다시 더 입력할 수 있다', 그리고 '현재 상황 이후의 모든 입력은 100% 제대로 입력한다', '백스페이스, 엔터키는 키를 한 번 더 입력한 것으로 취급한다' '특히 암호를 다 입력한 마지막은 항상 엔터키를 입력한다'&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; &quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:462px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;http://cfile10.uf.tistory.com/image/120D933E4F9B926115A3FD&quot; filemime=&quot;image/jpeg&quot; filename=&quot;googlecodejam.png&quot; height=&quot;110&quot; style=&quot;&quot; width=&quot;462&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;만약 암호가 &quot;guest&quot; 이고 현재 2자리의 암호를 입력했고, 첫번째 자리를 제대로 입력할 확률이 60%, 두번째 자리도 60% 라면, 위와 같이 expected 값을 구할 수 있다. &quot;gu&quot; 는 제대로 &quot;gu&quot; 를 입력했다는 뜻이고, &quot;gX&quot; 는 &quot;g&quot; 는 제대로 입력했고, &quot;X&quot; 는 &quot;u&quot; 를 입력해야하는 자리에 다른 글자를 입력했다는 뜻이다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;위의 그림은 다음과 같은 입력값과 출력값을 가지게 된다.&lt;/p&gt;&lt;p&gt;입력:&lt;/p&gt;&lt;p&gt;2 5&lt;/p&gt;&lt;p&gt;0.6 0.6&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출력:&amp;nbsp;&lt;/p&gt;&lt;p&gt;7.0&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&quot;guest&quot; 는 5개의 글자이고, 현재까지 입력된 문자는 2개 이므로, &quot;2 5&quot; 로 한 줄 입력을 받게 되고, 첫째 자리를 제대로 입력할 확률이 60% -&amp;gt; 0.6, 두번째 자리도 60% 이므로 0.6이 된다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그리고 위의 그림에서 Expected 값이 가장 작은 값이 7 이므로, 7.0을 출력하게 된다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;위의 그림을 좀 더 분석해보면, Probability &quot;gu&quot; 는 첫째자리도 맞고, 둘때자리도 맞으므로 0.6 * 0.6 = 0.36 의 확률이다. &quot;gX&quot;, &quot;Xu&quot;, &quot;XX&quot; 는 마찬가지.&lt;/p&gt;&lt;p&gt;&amp;nbsp;Keystrokes if I keep typing 은 현재 &quot;gu&quot;, &quot;gX&quot; 등을 입력했는 상황에서 각각 몇번 더 키를 입력해야 암호를 맞출 수 있다는 것이다. &quot;gu&quot; 가 4 인 이유는 e,s,t,엔터 를 더 입력하면 되므로 4번. &quot;gX&quot; 는 e,s,t,엔터 입력하면 암호가 틀리게 되므로 여기서 다시 g,u,e,s,t,엔터 를 입력해서 4번+6번해서 10번이다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;Keystrokes if I press backspace once 중 &quot;gu&quot; 는 백스페이스,u,e,s,t,엔터 이므로 6번. &quot;Xu&quot; 는 백스페이스,u,e,s,t,엔터 하면 암호가 틀리므로 다시 g,u,e,s,t,엔터. 그래서 6번+6번해서 12번 이런식이다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;Keystrokes if I press enter right away 는 모두 7 인 이유가 엔터를 바로 넣어서 현재 입력중인 암호는 틀려버리고 다시 g,u,e,s,t,엔터 해서 1번+6번 = 7번이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;아... 다시 적어보니 이것도 쉬운 로직은 아니구나 ㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; &quot;&gt;&amp;nbsp;문제해결과정&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;이 문제를 저렇게 진짜 테이블을 다 그리려고 하니 머리가 아프기도 하고, 저 테이블을 진짜로 그리려면, large 문제를 도저히 해결할 수 없겠다는 생각이 들었다(large 문제는 암호의 길이가 10만이므로 이것을 제곱한 만큼 하려면 도저히 풀 수가 없다..... 사실 10만 제곱이 얼만큼 걸리는가해서 그냥 이중for 를 돌려봤는데 꽤 오래걸림;; 그리고 여기서 다시 10만 번을 돌아야하므로 일단 저 테이블을 그리는 건 포기.&lt;/p&gt;&lt;p&gt;&amp;nbsp;그래서 다시 손으로 문제를 계속 풀어보기 시작함. 분명히 무슨 규칙이 있을거라는 생각에... 일단은 '가지치기' 가 생각나서, 특정 최소 값을 구하고 나머지는 표를 안 그래도 될 거 같다는 생각을 해봤는데, 결과값이 '계산된 값' 이라서 '어? 그럼 그려야하나? -_-' 싶었는데 이것도 아니었음.&lt;/p&gt;&lt;p&gt;다시 이런저런 생각을 해보다가 문득 떠오른 것이 '백스페이스를 한번 하면 이전 상태가 된다' 였음. 즉, 현재 입력된 암호가 5개이고, 백스페이스를 한번 입력하면, '입력된 암호가 4개인 상태' 가 된다는 것. 결과적으로는 고등학교 때 배운 점화식 문제;; An = An-1 + 9 같은 ㅋ&lt;/p&gt;&lt;p&gt;&amp;nbsp;결론적으로는 테이블을 3부분으로 나누어보았다.&amp;nbsp;&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal; &quot;&gt;&lt;li&gt;Keep : Keystrokes if I keep typing&lt;/li&gt;&lt;li&gt;Backspace : Keystrokes if I press backspace once twice.......&lt;/li&gt;&lt;li&gt;EnterNow :&amp;nbsp;Keystrokes if I press enter right away&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&amp;nbsp;그래서, 현재 암호의 갯수가 주어졌을 때 Keep 부분, Backspace 부분, EnterNow 부분 중 expected 가 최소인 값을 찾는 것이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;Keep 은 간단히 계산이 가능하다. (현재까지 입력한 암호가 맞을 확률 * 남은 키입력 갯수 + 현재까지 입력한 암호가 틀릴 확률 * (남은 키입력 갯수)) 이다. 다만, 암호가 맞을 때는 남은 키입력 갯수가 (전체 암호 길이 - 현재까지 입력한 길이 + 1 ) 이지만(엔터가 +1), 암호가 틀릴 때는 남은 키입력 갯수가 (전체 암호길이 - 현재까지 입력한 길이 + 1 ) + ( 전체 암호길이 + 1) 이 되는 것이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;Backspace 부분은 나중에 다시~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;EnterNow 부분도 Keep 과 비슷하게 계산할 수 있다. 다만, 무조건 현재 상황에서 엔터이므로 모두가 같은 값을 가진다. ( 1 + 전체 암호 길이 + 1 ) 이된다. +1은 엔터키.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;이렇게 생각해보면 다음과 같은 점화식을 만들 수 있다. N 이 현재까지 입력된 암호의 길이라고 하면, 우리가 원하는 값은 다음과 같이 3개의 값 중 최소값(min) 이다. minimumExpected(N-1) 에 +1 을 하는 이유는 한글자를 지우기 위해서 backspace 를 눌렀기 때문이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;minimumExpected(N) = min ( Keep, minimumExpected(N-1)+1 , enterNow )&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;점화식에서 항상 등장하는 시작값은, '암호를 하나도 입력하지 않은 상태' 이다. 그러므로 minimumExpected(0) 은 암호 전체 길이 + 1 이다. 마지막의 +1은 엔터.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;정리해보면, N 자리까지 암호가 입력되었을 때는, N-1 자리까지 암호가 입력되었을 때의 값을 구하고, keep, enternow 값을 계산하면 된다. keep, enternow 는 쉽게 확률을 곱하고, 더하면 되고, minimumexpected 는 재귀호출로 구할 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;내가 만들어본 소스는 다음과 같다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;#include &amp;lt;algorithm&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;vector&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;iostream&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;sstream&amp;gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;using namespace std;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;stringstream emptyOut;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;#define DP_ON 0&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;#if DP_ON&lt;/div&gt;&lt;div&gt;#define DP std::cout &amp;lt;&amp;lt; &quot;[DebugPrint]:&quot;&lt;/div&gt;&lt;div&gt;#else&lt;/div&gt;&lt;div&gt;#define DP emptyOut&lt;/div&gt;&lt;div&gt;#endif&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;int getintline()&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;string data;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;getline(cin, data);&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;stringstream s;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;s &amp;lt;&amp;lt; data;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;int ret;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;s &amp;gt;&amp;gt; ret;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;return ret;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;vector &amp;lt; int &amp;gt; getintvectorline()&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;vector &amp;lt; int &amp;gt; ret;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;string data;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;getline(cin, data);&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;stringstream s, debugstream;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;s &amp;lt;&amp;lt; data;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;debugstream &amp;lt;&amp;lt; &quot;getintvector : &quot;;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;while ( !s.eof() )&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;int v;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;s &amp;gt;&amp;gt; v;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;debugstream &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; v;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;ret.push_back(v);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;DP &amp;lt;&amp;lt; debugstream.str().c_str() &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;return ret;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;vector &amp;lt; double &amp;gt; getdoublevectorline()&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;vector &amp;lt; double &amp;gt; ret;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;string data;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;getline(cin, data);&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;stringstream s, debugstream;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;s &amp;lt;&amp;lt; data;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;debugstream &amp;lt;&amp;lt; &quot;getintvector : &quot;;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;while ( !s.eof() )&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;double v;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;s &amp;gt;&amp;gt; v;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;debugstream &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; v;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;ret.push_back(v);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;DP &amp;lt;&amp;lt; debugstream.str().c_str() &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;return ret;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;vector &amp;lt; double &amp;gt; probabilities;&lt;/div&gt;&lt;div&gt;double expected(double currentTyped, double totalCharacters)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;if ( currentTyped == 0 )&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;return totalCharacters + 1.0;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;double expected_previous = expected(currentTyped-1, totalCharacters) + 1;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;double keepTyping = 0.0f;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;{// calc keep&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;double all_ok_probability = 1.0;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;for ( int i=0; i&amp;lt;currentTyped; ++i )&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;			&lt;/span&gt;all_ok_probability *= probabilities[i];&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;keepTyping = all_ok_probability * (totalCharacters-currentTyped+1.0);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;keepTyping += (1.0-all_ok_probability) * (totalCharacters-currentTyped+1.0+totalCharacters+1.0);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;double enterNow = 1.0 + totalCharacters + 1.0;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;double min = expected_previous &amp;lt; keepTyping ? expected_previous : keepTyping;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;min = min &amp;lt; enterNow ? min : enterNow;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;return min;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;void doOperation(int caseNo)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;vector &amp;lt; int &amp;gt; singleline = getintvectorline();&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;int A_currentTypedCharacters = singleline[0];&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;int B_totalToTypeCharacters = singleline[1];&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;probabilities = getdoublevectorline();&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;double min = expected(A_currentTypedCharacters, B_totalToTypeCharacters);&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;cout &amp;lt;&amp;lt; &quot;Case #&quot; &amp;lt;&amp;lt; caseNo &amp;lt;&amp;lt; &quot;: &quot;;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;cout.setf(ios::fixed);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;cout.precision(10);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;cout &amp;lt;&amp;lt; min &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;int main(int argc, char * [])&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;DP &amp;lt;&amp;lt; &quot;Start testing...&quot; &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;int numberOfCase = getintline();&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;for ( int i=0; i&amp;lt;numberOfCase; ++i )&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;		&lt;/span&gt;doOperation(i+1);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;return 0;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;그리고 이번 round 에서 1등한 사람의 소스는 다음과 같다.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;div&gt;#include &amp;lt;cstdio&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;iostream&amp;gt;&lt;/div&gt;&lt;div&gt;using namespace std;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;double p[100001];&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;main() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; int T, A, B, prob = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; for (cin &amp;gt;&amp;gt; T; T--;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; cin &amp;gt;&amp;gt; A &amp;gt;&amp;gt; B;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (int i = 0; i &amp;lt; A; i++) cin &amp;gt;&amp;gt; p[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; double ret = 2+B;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; double pr = 1.0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (int i = 0; i &amp;lt;= A; i++) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ret = min(ret, pr * ((A-i)+(B-i)+1) + (1-pr) * ((A-i)+(B-i)+1+B+1));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; pr *= p[i];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; printf(&quot;Case #%d: %.10lf\n&quot;, prob++, ret);&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;역시 코드잼은 위와 같이 짜는 것인가보다 ㅠㅜ&amp;nbsp;&amp;nbsp;(그리고 내가 만들어놓은 유틸리티 함수들은 다 쓸모없는 거였;;&amp;nbsp;) 참고로 이전 구글 코리아 코드잼 대회도 1등의 소스를 보면 한 화면을 넘어가지 않더라;;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; 남의 코드를 보면 이해는 힘들지만 배울 점이 많다. 군더더기 없는 깔끔한 코드 +_+ 나는 재귀호출을 통해서, N, N-1, N-2 를 구해가는데, 처음부터 1,2,3 으로 시작해서 배열에 넣고 있다. 나도 다음부터는 저렇게 배열로 해야겠다 큭&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;large 입력에 대해 속도를 비교해보면.... 처참하다 ㅋ 그래도 나도 문제를 풀었다구!!!! 라고 위안삼아본다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 블로그용 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5650750977133503&quot;
     data-ad-slot=&quot;6542591473&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>개발관련</category>
<category>code jam</category>
<category>Contest</category>
<category>GCJ</category>
<category>Google</category>
<category>google codejam</category>
<category>구글 코드잼</category>
<category>대회</category>
<author>zelon</author>
<guid>http://blog.wimy.com/389</guid>
<comments>http://blog.wimy.com/389#entry389comment</comments>
<pubDate>Sat, 28 Apr 2012 16:46:23 +0900</pubDate>
</item>
</channel>
</rss>
